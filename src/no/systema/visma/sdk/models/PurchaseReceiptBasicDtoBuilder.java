/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PurchaseReceiptBasicDtoBuilder {
    //the instance to build
    private PurchaseReceiptBasicDto purchaseReceiptBasicDto;

    /**
     * Default constructor to initialize the instance
     */
    public PurchaseReceiptBasicDtoBuilder() {
        purchaseReceiptBasicDto = new PurchaseReceiptBasicDto();
    }

    public PurchaseReceiptBasicDtoBuilder controlQty(Double controlQty) {
        purchaseReceiptBasicDto.setControlQty(controlQty);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder controlTotal(Double controlTotal) {
        purchaseReceiptBasicDto.setControlTotal(controlTotal);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder createBill(Boolean createBill) {
        purchaseReceiptBasicDto.setCreateBill(createBill);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder currency(String currency) {
        purchaseReceiptBasicDto.setCurrency(currency);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder date(Date date) {
        purchaseReceiptBasicDto.setDate(date);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder hold(Boolean hold) {
        purchaseReceiptBasicDto.setHold(hold);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        purchaseReceiptBasicDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder lines(List<PurchaseReceiptLineDto> lines) {
        purchaseReceiptBasicDto.setLines(lines);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder location(LocationDto location) {
        purchaseReceiptBasicDto.setLocation(location);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder postPeriod(String postPeriod) {
        purchaseReceiptBasicDto.setPostPeriod(postPeriod);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder receiptNbr(String receiptNbr) {
        purchaseReceiptBasicDto.setReceiptNbr(receiptNbr);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder receiptType(ReceiptTypeEnum receiptType) {
        purchaseReceiptBasicDto.setReceiptType(receiptType);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder status(Status161Enum status) {
        purchaseReceiptBasicDto.setStatus(status);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder supplier(SupplierDescriptionDto supplier) {
        purchaseReceiptBasicDto.setSupplier(supplier);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder supplierRef(String supplierRef) {
        purchaseReceiptBasicDto.setSupplierRef(supplierRef);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder totalAmt(Double totalAmt) {
        purchaseReceiptBasicDto.setTotalAmt(totalAmt);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder totalQty(Double totalQty) {
        purchaseReceiptBasicDto.setTotalQty(totalQty);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        purchaseReceiptBasicDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        purchaseReceiptBasicDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }

    public PurchaseReceiptBasicDtoBuilder warehouse(WarehouseIdDescriptionDto warehouse) {
        purchaseReceiptBasicDto.setWarehouse(warehouse);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PurchaseReceiptBasicDto build() {
        return purchaseReceiptBasicDto;
    }
}