/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class InventorySummaryDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4770628825144751487L;
    private Double available;
    private Double availableForShipment;
    private String baseUnit;
    private Double dropShipForSO;
    private Double dropShipForSOPrepared;
    private Double dropShipForSOReceipts;
    private Double estimatedTotalCost;
    private Double estimatedUnitCost;
    private Double expired;
    private Double inAssemblyDemand;
    private Double inAssemblySupply;
    private Double inIssues;
    private Double inReceipts;
    private Double inTransit;
    private InventoryNumberDescriptionDto inventory;
    private LocationIdNameDto location;
    private Double notAvailable;
    private Double onHand;
    private Double poReceipts;
    private Double purchaseForSO;
    private Double purchaseForSOPrepared;
    private Double purchaseForSOReceipts;
    private Double purchaseOrders;
    private Double purchasePrepared;
    private Double soAllocated;
    private Double soBackOrdered;
    private Double soBooked;
    private Double soShipped;
    private Double soToDropShip;
    private Double soToPurchase;
    private WarehouseIdDescriptionDto warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("available")
    public Double getAvailable ( ) { 
        return this.available;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("available")
    public void setAvailable (Double value) { 
        this.available = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("availableForShipment")
    public Double getAvailableForShipment ( ) { 
        return this.availableForShipment;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("availableForShipment")
    public void setAvailableForShipment (Double value) { 
        this.availableForShipment = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("baseUnit")
    public String getBaseUnit ( ) { 
        return this.baseUnit;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("baseUnit")
    public void setBaseUnit (String value) { 
        this.baseUnit = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("dropShipForSO")
    public Double getDropShipForSO ( ) { 
        return this.dropShipForSO;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("dropShipForSO")
    public void setDropShipForSO (Double value) { 
        this.dropShipForSO = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("dropShipForSOPrepared")
    public Double getDropShipForSOPrepared ( ) { 
        return this.dropShipForSOPrepared;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("dropShipForSOPrepared")
    public void setDropShipForSOPrepared (Double value) { 
        this.dropShipForSOPrepared = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("dropShipForSOReceipts")
    public Double getDropShipForSOReceipts ( ) { 
        return this.dropShipForSOReceipts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("dropShipForSOReceipts")
    public void setDropShipForSOReceipts (Double value) { 
        this.dropShipForSOReceipts = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("estimatedTotalCost")
    public Double getEstimatedTotalCost ( ) { 
        return this.estimatedTotalCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("estimatedTotalCost")
    public void setEstimatedTotalCost (Double value) { 
        this.estimatedTotalCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("estimatedUnitCost")
    public Double getEstimatedUnitCost ( ) { 
        return this.estimatedUnitCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("estimatedUnitCost")
    public void setEstimatedUnitCost (Double value) { 
        this.estimatedUnitCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expired")
    public Double getExpired ( ) { 
        return this.expired;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expired")
    public void setExpired (Double value) { 
        this.expired = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inAssemblyDemand")
    public Double getInAssemblyDemand ( ) { 
        return this.inAssemblyDemand;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inAssemblyDemand")
    public void setInAssemblyDemand (Double value) { 
        this.inAssemblyDemand = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inAssemblySupply")
    public Double getInAssemblySupply ( ) { 
        return this.inAssemblySupply;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inAssemblySupply")
    public void setInAssemblySupply (Double value) { 
        this.inAssemblySupply = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inIssues")
    public Double getInIssues ( ) { 
        return this.inIssues;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inIssues")
    public void setInIssues (Double value) { 
        this.inIssues = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inReceipts")
    public Double getInReceipts ( ) { 
        return this.inReceipts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inReceipts")
    public void setInReceipts (Double value) { 
        this.inReceipts = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inTransit")
    public Double getInTransit ( ) { 
        return this.inTransit;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inTransit")
    public void setInTransit (Double value) { 
        this.inTransit = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public InventoryNumberDescriptionDto getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (InventoryNumberDescriptionDto value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationIdNameDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationIdNameDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("notAvailable")
    public Double getNotAvailable ( ) { 
        return this.notAvailable;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("notAvailable")
    public void setNotAvailable (Double value) { 
        this.notAvailable = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("onHand")
    public Double getOnHand ( ) { 
        return this.onHand;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("onHand")
    public void setOnHand (Double value) { 
        this.onHand = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("poReceipts")
    public Double getPoReceipts ( ) { 
        return this.poReceipts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("poReceipts")
    public void setPoReceipts (Double value) { 
        this.poReceipts = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("purchaseForSO")
    public Double getPurchaseForSO ( ) { 
        return this.purchaseForSO;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("purchaseForSO")
    public void setPurchaseForSO (Double value) { 
        this.purchaseForSO = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("purchaseForSOPrepared")
    public Double getPurchaseForSOPrepared ( ) { 
        return this.purchaseForSOPrepared;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("purchaseForSOPrepared")
    public void setPurchaseForSOPrepared (Double value) { 
        this.purchaseForSOPrepared = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("purchaseForSOReceipts")
    public Double getPurchaseForSOReceipts ( ) { 
        return this.purchaseForSOReceipts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("purchaseForSOReceipts")
    public void setPurchaseForSOReceipts (Double value) { 
        this.purchaseForSOReceipts = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("purchaseOrders")
    public Double getPurchaseOrders ( ) { 
        return this.purchaseOrders;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("purchaseOrders")
    public void setPurchaseOrders (Double value) { 
        this.purchaseOrders = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("purchasePrepared")
    public Double getPurchasePrepared ( ) { 
        return this.purchasePrepared;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("purchasePrepared")
    public void setPurchasePrepared (Double value) { 
        this.purchasePrepared = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soAllocated")
    public Double getSoAllocated ( ) { 
        return this.soAllocated;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soAllocated")
    public void setSoAllocated (Double value) { 
        this.soAllocated = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soBackOrdered")
    public Double getSoBackOrdered ( ) { 
        return this.soBackOrdered;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soBackOrdered")
    public void setSoBackOrdered (Double value) { 
        this.soBackOrdered = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soBooked")
    public Double getSoBooked ( ) { 
        return this.soBooked;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soBooked")
    public void setSoBooked (Double value) { 
        this.soBooked = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soShipped")
    public Double getSoShipped ( ) { 
        return this.soShipped;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soShipped")
    public void setSoShipped (Double value) { 
        this.soShipped = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soToDropShip")
    public Double getSoToDropShip ( ) { 
        return this.soToDropShip;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soToDropShip")
    public void setSoToDropShip (Double value) { 
        this.soToDropShip = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("soToPurchase")
    public Double getSoToPurchase ( ) { 
        return this.soToPurchase;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("soToPurchase")
    public void setSoToPurchase (Double value) { 
        this.soToPurchase = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public WarehouseIdDescriptionDto getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (WarehouseIdDescriptionDto value) { 
        this.warehouse = value;
    }
 
}
 