/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class GeneralLedgerTransactionDetailsDtoBuilder {
    //the instance to build
    private GeneralLedgerTransactionDetailsDto generalLedgerTransactionDetailsDto;

    /**
     * Default constructor to initialize the instance
     */
    public GeneralLedgerTransactionDetailsDtoBuilder() {
        generalLedgerTransactionDetailsDto = new GeneralLedgerTransactionDetailsDto();
    }

    public GeneralLedgerTransactionDetailsDtoBuilder account(AccountNumberDto account) {
        generalLedgerTransactionDetailsDto.setAccount(account);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder batchNumber(String batchNumber) {
        generalLedgerTransactionDetailsDto.setBatchNumber(batchNumber);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder begBalance(Double begBalance) {
        generalLedgerTransactionDetailsDto.setBegBalance(begBalance);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder branch(BranchNumberDto branch) {
        generalLedgerTransactionDetailsDto.setBranch(branch);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder creditAmount(Double creditAmount) {
        generalLedgerTransactionDetailsDto.setCreditAmount(creditAmount);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder currBegBalance(Double currBegBalance) {
        generalLedgerTransactionDetailsDto.setCurrBegBalance(currBegBalance);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder currCreditAmount(Double currCreditAmount) {
        generalLedgerTransactionDetailsDto.setCurrCreditAmount(currCreditAmount);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder currDebitAmount(Double currDebitAmount) {
        generalLedgerTransactionDetailsDto.setCurrDebitAmount(currDebitAmount);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder currency(String currency) {
        generalLedgerTransactionDetailsDto.setCurrency(currency);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder currEndingBalance(Double currEndingBalance) {
        generalLedgerTransactionDetailsDto.setCurrEndingBalance(currEndingBalance);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder debitAmount(Double debitAmount) {
        generalLedgerTransactionDetailsDto.setDebitAmount(debitAmount);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder description(String description) {
        generalLedgerTransactionDetailsDto.setDescription(description);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder endingBalance(Double endingBalance) {
        generalLedgerTransactionDetailsDto.setEndingBalance(endingBalance);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder ledger(LedgerDescriptionDto ledger) {
        generalLedgerTransactionDetailsDto.setLedger(ledger);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder lineNumber(Integer lineNumber) {
        generalLedgerTransactionDetailsDto.setLineNumber(lineNumber);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder module(String module) {
        generalLedgerTransactionDetailsDto.setModule(module);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder period(String period) {
        generalLedgerTransactionDetailsDto.setPeriod(period);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder refNumber(String refNumber) {
        generalLedgerTransactionDetailsDto.setRefNumber(refNumber);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder subaccount(String subaccount) {
        generalLedgerTransactionDetailsDto.setSubaccount(subaccount);
        return this;
    }

    public GeneralLedgerTransactionDetailsDtoBuilder tranDate(Date tranDate) {
        generalLedgerTransactionDetailsDto.setTranDate(tranDate);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GeneralLedgerTransactionDetailsDto build() {
        return generalLedgerTransactionDetailsDto;
    }
}