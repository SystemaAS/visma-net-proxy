/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PurchaseOrderDtoBuilder {
    //the instance to build
    private PurchaseOrderDto purchaseOrderDto;

    /**
     * Default constructor to initialize the instance
     */
    public PurchaseOrderDtoBuilder() {
        purchaseOrderDto = new PurchaseOrderDto();
    }

    public PurchaseOrderDtoBuilder branch(BranchNumberDto branch) {
        purchaseOrderDto.setBranch(branch);
        return this;
    }

    public PurchaseOrderDtoBuilder controlTotal(Double controlTotal) {
        purchaseOrderDto.setControlTotal(controlTotal);
        return this;
    }

    public PurchaseOrderDtoBuilder currency(String currency) {
        purchaseOrderDto.setCurrency(currency);
        return this;
    }

    public PurchaseOrderDtoBuilder date(Date date) {
        purchaseOrderDto.setDate(date);
        return this;
    }

    public PurchaseOrderDtoBuilder description(String description) {
        purchaseOrderDto.setDescription(description);
        return this;
    }

    public PurchaseOrderDtoBuilder discountDetails(List<DiscountDetailDto> discountDetails) {
        purchaseOrderDto.setDiscountDetails(discountDetails);
        return this;
    }

    public PurchaseOrderDtoBuilder dontEmail(Boolean dontEmail) {
        purchaseOrderDto.setDontEmail(dontEmail);
        return this;
    }

    public PurchaseOrderDtoBuilder dontPrint(Boolean dontPrint) {
        purchaseOrderDto.setDontPrint(dontPrint);
        return this;
    }

    public PurchaseOrderDtoBuilder emailed(Boolean emailed) {
        purchaseOrderDto.setEmailed(emailed);
        return this;
    }

    public PurchaseOrderDtoBuilder fobPoint(String fobPoint) {
        purchaseOrderDto.setFobPoint(fobPoint);
        return this;
    }

    public PurchaseOrderDtoBuilder hold(Boolean hold) {
        purchaseOrderDto.setHold(hold);
        return this;
    }

    public PurchaseOrderDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        purchaseOrderDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public PurchaseOrderDtoBuilder lines(List<PurchaseOrderLineDto> lines) {
        purchaseOrderDto.setLines(lines);
        return this;
    }

    public PurchaseOrderDtoBuilder lineTotal(Double lineTotal) {
        purchaseOrderDto.setLineTotal(lineTotal);
        return this;
    }

    public PurchaseOrderDtoBuilder location(LocationIdNameDto location) {
        purchaseOrderDto.setLocation(location);
        return this;
    }

    public PurchaseOrderDtoBuilder openBalance(Double openBalance) {
        purchaseOrderDto.setOpenBalance(openBalance);
        return this;
    }

    public PurchaseOrderDtoBuilder openQuantity(Double openQuantity) {
        purchaseOrderDto.setOpenQuantity(openQuantity);
        return this;
    }

    public PurchaseOrderDtoBuilder orderNbr(String orderNbr) {
        purchaseOrderDto.setOrderNbr(orderNbr);
        return this;
    }

    public PurchaseOrderDtoBuilder orderTotal(Double orderTotal) {
        purchaseOrderDto.setOrderTotal(orderTotal);
        return this;
    }

    public PurchaseOrderDtoBuilder orderType(OrderTypeEnum orderType) {
        purchaseOrderDto.setOrderType(orderType);
        return this;
    }

    public PurchaseOrderDtoBuilder owner(UserDescriptionDto owner) {
        purchaseOrderDto.setOwner(owner);
        return this;
    }

    public PurchaseOrderDtoBuilder paymentRefNbr(String paymentRefNbr) {
        purchaseOrderDto.setPaymentRefNbr(paymentRefNbr);
        return this;
    }

    public PurchaseOrderDtoBuilder printed(Boolean printed) {
        purchaseOrderDto.setPrinted(printed);
        return this;
    }

    public PurchaseOrderDtoBuilder promisedOn(Date promisedOn) {
        purchaseOrderDto.setPromisedOn(promisedOn);
        return this;
    }

    public PurchaseOrderDtoBuilder remitAddress(PurchaseOrderAddressDto remitAddress) {
        purchaseOrderDto.setRemitAddress(remitAddress);
        return this;
    }

    public PurchaseOrderDtoBuilder remitContact(PurchaseOrderContactDto remitContact) {
        purchaseOrderDto.setRemitContact(remitContact);
        return this;
    }

    public PurchaseOrderDtoBuilder requisitionRefNbr(String requisitionRefNbr) {
        purchaseOrderDto.setRequisitionRefNbr(requisitionRefNbr);
        return this;
    }

    public PurchaseOrderDtoBuilder salesOrderNbr(String salesOrderNbr) {
        purchaseOrderDto.setSalesOrderNbr(salesOrderNbr);
        return this;
    }

    public PurchaseOrderDtoBuilder salesOrderType(String salesOrderType) {
        purchaseOrderDto.setSalesOrderType(salesOrderType);
        return this;
    }

    public PurchaseOrderDtoBuilder shippingAddress(PurchaseOrderAddressDto shippingAddress) {
        purchaseOrderDto.setShippingAddress(shippingAddress);
        return this;
    }

    public PurchaseOrderDtoBuilder shippingContact(PurchaseOrderContactDto shippingContact) {
        purchaseOrderDto.setShippingContact(shippingContact);
        return this;
    }

    public PurchaseOrderDtoBuilder shippingDestinationType(ShippingDestinationTypeEnum shippingDestinationType) {
        purchaseOrderDto.setShippingDestinationType(shippingDestinationType);
        return this;
    }

    public PurchaseOrderDtoBuilder shippingLocation(LocationIdNameDto shippingLocation) {
        purchaseOrderDto.setShippingLocation(shippingLocation);
        return this;
    }

    public PurchaseOrderDtoBuilder shipTo(BAccountDescriptionDto shipTo) {
        purchaseOrderDto.setShipTo(shipTo);
        return this;
    }

    public PurchaseOrderDtoBuilder shipVia(String shipVia) {
        purchaseOrderDto.setShipVia(shipVia);
        return this;
    }

    public PurchaseOrderDtoBuilder status(Status238Enum status) {
        purchaseOrderDto.setStatus(status);
        return this;
    }

    public PurchaseOrderDtoBuilder supplier(SupplierDescriptionDto supplier) {
        purchaseOrderDto.setSupplier(supplier);
        return this;
    }

    public PurchaseOrderDtoBuilder supplierRef(String supplierRef) {
        purchaseOrderDto.setSupplierRef(supplierRef);
        return this;
    }

    public PurchaseOrderDtoBuilder supplierVatZone(VatZoneDto supplierVatZone) {
        purchaseOrderDto.setSupplierVatZone(supplierVatZone);
        return this;
    }

    public PurchaseOrderDtoBuilder taxDetails(List<TaxDetailDto> taxDetails) {
        purchaseOrderDto.setTaxDetails(taxDetails);
        return this;
    }

    public PurchaseOrderDtoBuilder taxTotal(Double taxTotal) {
        purchaseOrderDto.setTaxTotal(taxTotal);
        return this;
    }

    public PurchaseOrderDtoBuilder terms(CreditTermsDto terms) {
        purchaseOrderDto.setTerms(terms);
        return this;
    }

    public PurchaseOrderDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        purchaseOrderDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public PurchaseOrderDtoBuilder workgroupID(Integer workgroupID) {
        purchaseOrderDto.setWorkgroupID(workgroupID);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PurchaseOrderDto build() {
        return purchaseOrderDto;
    }
}