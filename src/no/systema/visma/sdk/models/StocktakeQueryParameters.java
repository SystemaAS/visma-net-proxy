/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class StocktakeQueryParameters 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5262029474382371692L;
    private Integer endWithLine;
    private String expirationDateTime;
    private String expirationDateTimeCondition;
    private String freezeDateTime;
    private String freezeDateTimeCondition;
    private String inventory;
    private String lastModifiedDateTime;
    private String lastModifiedDateTimeCondition;
    private String location;
    private String lotSerialNumber;
    private Integer numberToRead;
    private Integer skipRecords;
    private Integer startWithLine;
    private Status314Enum status;
    private SummaryStatusEnum summaryStatus;
    private String warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("endWithLine")
    public Integer getEndWithLine ( ) { 
        return this.endWithLine;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("endWithLine")
    public void setEndWithLine (Integer value) { 
        this.endWithLine = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expirationDateTime")
    public String getExpirationDateTime ( ) { 
        return this.expirationDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expirationDateTime")
    public void setExpirationDateTime (String value) { 
        this.expirationDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expirationDateTimeCondition")
    public String getExpirationDateTimeCondition ( ) { 
        return this.expirationDateTimeCondition;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expirationDateTimeCondition")
    public void setExpirationDateTimeCondition (String value) { 
        this.expirationDateTimeCondition = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("freezeDateTime")
    public String getFreezeDateTime ( ) { 
        return this.freezeDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("freezeDateTime")
    public void setFreezeDateTime (String value) { 
        this.freezeDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("freezeDateTimeCondition")
    public String getFreezeDateTimeCondition ( ) { 
        return this.freezeDateTimeCondition;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("freezeDateTimeCondition")
    public void setFreezeDateTimeCondition (String value) { 
        this.freezeDateTimeCondition = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public String getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (String value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTime")
    public String getLastModifiedDateTime ( ) { 
        return this.lastModifiedDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTime")
    public void setLastModifiedDateTime (String value) { 
        this.lastModifiedDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTimeCondition")
    public String getLastModifiedDateTimeCondition ( ) { 
        return this.lastModifiedDateTimeCondition;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTimeCondition")
    public void setLastModifiedDateTimeCondition (String value) { 
        this.lastModifiedDateTimeCondition = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public String getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (String value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lotSerialNumber")
    public String getLotSerialNumber ( ) { 
        return this.lotSerialNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lotSerialNumber")
    public void setLotSerialNumber (String value) { 
        this.lotSerialNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("numberToRead")
    public Integer getNumberToRead ( ) { 
        return this.numberToRead;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("numberToRead")
    public void setNumberToRead (Integer value) { 
        this.numberToRead = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("skipRecords")
    public Integer getSkipRecords ( ) { 
        return this.skipRecords;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("skipRecords")
    public void setSkipRecords (Integer value) { 
        this.skipRecords = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("startWithLine")
    public Integer getStartWithLine ( ) { 
        return this.startWithLine;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("startWithLine")
    public void setStartWithLine (Integer value) { 
        this.startWithLine = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("status")
    public Status314Enum getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("status")
    public void setStatus (Status314Enum value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("summaryStatus")
    public SummaryStatusEnum getSummaryStatus ( ) { 
        return this.summaryStatus;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("summaryStatus")
    public void setSummaryStatus (SummaryStatusEnum value) { 
        this.summaryStatus = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public String getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (String value) { 
        this.warehouse = value;
    }
 
}
 