/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PurchaseReceiptDtoBuilder {
    //the instance to build
    private PurchaseReceiptDto purchaseReceiptDto;

    /**
     * Default constructor to initialize the instance
     */
    public PurchaseReceiptDtoBuilder() {
        purchaseReceiptDto = new PurchaseReceiptDto();
    }

    public PurchaseReceiptDtoBuilder controlQty(Double controlQty) {
        purchaseReceiptDto.setControlQty(controlQty);
        return this;
    }

    public PurchaseReceiptDtoBuilder controlTotal(Double controlTotal) {
        purchaseReceiptDto.setControlTotal(controlTotal);
        return this;
    }

    public PurchaseReceiptDtoBuilder createBill(Boolean createBill) {
        purchaseReceiptDto.setCreateBill(createBill);
        return this;
    }

    public PurchaseReceiptDtoBuilder currency(String currency) {
        purchaseReceiptDto.setCurrency(currency);
        return this;
    }

    public PurchaseReceiptDtoBuilder date(Date date) {
        purchaseReceiptDto.setDate(date);
        return this;
    }

    public PurchaseReceiptDtoBuilder hold(Boolean hold) {
        purchaseReceiptDto.setHold(hold);
        return this;
    }

    public PurchaseReceiptDtoBuilder landedCost(List<LandedCostDto> landedCost) {
        purchaseReceiptDto.setLandedCost(landedCost);
        return this;
    }

    public PurchaseReceiptDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        purchaseReceiptDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public PurchaseReceiptDtoBuilder lines(List<PurchaseReceiptLineDto> lines) {
        purchaseReceiptDto.setLines(lines);
        return this;
    }

    public PurchaseReceiptDtoBuilder location(LocationDto location) {
        purchaseReceiptDto.setLocation(location);
        return this;
    }

    public PurchaseReceiptDtoBuilder postPeriod(String postPeriod) {
        purchaseReceiptDto.setPostPeriod(postPeriod);
        return this;
    }

    public PurchaseReceiptDtoBuilder receiptNbr(String receiptNbr) {
        purchaseReceiptDto.setReceiptNbr(receiptNbr);
        return this;
    }

    public PurchaseReceiptDtoBuilder receiptType(ReceiptTypeEnum receiptType) {
        purchaseReceiptDto.setReceiptType(receiptType);
        return this;
    }

    public PurchaseReceiptDtoBuilder status(Status161Enum status) {
        purchaseReceiptDto.setStatus(status);
        return this;
    }

    public PurchaseReceiptDtoBuilder supplier(SupplierDescriptionDto supplier) {
        purchaseReceiptDto.setSupplier(supplier);
        return this;
    }

    public PurchaseReceiptDtoBuilder supplierRef(String supplierRef) {
        purchaseReceiptDto.setSupplierRef(supplierRef);
        return this;
    }

    public PurchaseReceiptDtoBuilder totalAmt(Double totalAmt) {
        purchaseReceiptDto.setTotalAmt(totalAmt);
        return this;
    }

    public PurchaseReceiptDtoBuilder totalQty(Double totalQty) {
        purchaseReceiptDto.setTotalQty(totalQty);
        return this;
    }

    public PurchaseReceiptDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        purchaseReceiptDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public PurchaseReceiptDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        purchaseReceiptDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }

    public PurchaseReceiptDtoBuilder warehouse(WarehouseIdDescriptionDto warehouse) {
        purchaseReceiptDto.setWarehouse(warehouse);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PurchaseReceiptDto build() {
        return purchaseReceiptDto;
    }
}