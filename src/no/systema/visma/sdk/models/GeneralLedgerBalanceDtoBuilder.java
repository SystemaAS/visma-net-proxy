/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class GeneralLedgerBalanceDtoBuilder {
    //the instance to build
    private GeneralLedgerBalanceDto generalLedgerBalanceDto;

    /**
     * Default constructor to initialize the instance
     */
    public GeneralLedgerBalanceDtoBuilder() {
        generalLedgerBalanceDto = new GeneralLedgerBalanceDto();
    }

    public GeneralLedgerBalanceDtoBuilder account(AccountNumberDto account) {
        generalLedgerBalanceDto.setAccount(account);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder balanceType(BalanceTypeEnum balanceType) {
        generalLedgerBalanceDto.setBalanceType(balanceType);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder beginningBalance(Double beginningBalance) {
        generalLedgerBalanceDto.setBeginningBalance(beginningBalance);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder beginningBalanceInCurrency(Double beginningBalanceInCurrency) {
        generalLedgerBalanceDto.setBeginningBalanceInCurrency(beginningBalanceInCurrency);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder branch(BranchNumberDto branch) {
        generalLedgerBalanceDto.setBranch(branch);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder currencyId(String currencyId) {
        generalLedgerBalanceDto.setCurrencyId(currencyId);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder financialPeriod(String financialPeriod) {
        generalLedgerBalanceDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        generalLedgerBalanceDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder ledger(LedgerDescriptionDto ledger) {
        generalLedgerBalanceDto.setLedger(ledger);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder periodToDateCredit(Double periodToDateCredit) {
        generalLedgerBalanceDto.setPeriodToDateCredit(periodToDateCredit);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder periodToDateCreditInCurrency(Double periodToDateCreditInCurrency) {
        generalLedgerBalanceDto.setPeriodToDateCreditInCurrency(periodToDateCreditInCurrency);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder periodToDateDebit(Double periodToDateDebit) {
        generalLedgerBalanceDto.setPeriodToDateDebit(periodToDateDebit);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder periodToDateDebitInCurrency(Double periodToDateDebitInCurrency) {
        generalLedgerBalanceDto.setPeriodToDateDebitInCurrency(periodToDateDebitInCurrency);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder subaccountId(Integer subaccountId) {
        generalLedgerBalanceDto.setSubaccountId(subaccountId);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder yearClosed(Boolean yearClosed) {
        generalLedgerBalanceDto.setYearClosed(yearClosed);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder yearToDateBalance(Double yearToDateBalance) {
        generalLedgerBalanceDto.setYearToDateBalance(yearToDateBalance);
        return this;
    }

    public GeneralLedgerBalanceDtoBuilder yearToDateBalanceInCurrency(Double yearToDateBalanceInCurrency) {
        generalLedgerBalanceDto.setYearToDateBalanceInCurrency(yearToDateBalanceInCurrency);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GeneralLedgerBalanceDto build() {
        return generalLedgerBalanceDto;
    }
}