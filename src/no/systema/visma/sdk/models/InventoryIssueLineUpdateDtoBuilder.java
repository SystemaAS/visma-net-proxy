/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class InventoryIssueLineUpdateDtoBuilder {
    //the instance to build
    private InventoryIssueLineUpdateDto inventoryIssueLineUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public InventoryIssueLineUpdateDtoBuilder() {
        inventoryIssueLineUpdateDto = new InventoryIssueLineUpdateDto();
    }

    public InventoryIssueLineUpdateDtoBuilder description(DtoValueString description) {
        inventoryIssueLineUpdateDto.setDescription(description);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder extCost(DtoValueNullableDecimal extCost) {
        inventoryIssueLineUpdateDto.setExtCost(extCost);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder extPrice(DtoValueNullableDecimal extPrice) {
        inventoryIssueLineUpdateDto.setExtPrice(extPrice);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder inventoryNumber(DtoValueString inventoryNumber) {
        inventoryIssueLineUpdateDto.setInventoryNumber(inventoryNumber);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder lineNumber(DtoValueInt32 lineNumber) {
        inventoryIssueLineUpdateDto.setLineNumber(lineNumber);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder locationId(DtoValueString locationId) {
        inventoryIssueLineUpdateDto.setLocationId(locationId);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder operation(OperationEnum operation) {
        inventoryIssueLineUpdateDto.setOperation(operation);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder quantity(DtoValueNullableDecimal quantity) {
        inventoryIssueLineUpdateDto.setQuantity(quantity);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder reasonCode(DtoValueString reasonCode) {
        inventoryIssueLineUpdateDto.setReasonCode(reasonCode);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder tranType(DtoValueNullableInventoryTransactionType tranType) {
        inventoryIssueLineUpdateDto.setTranType(tranType);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder unitCost(DtoValueNullableDecimal unitCost) {
        inventoryIssueLineUpdateDto.setUnitCost(unitCost);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder unitPrice(DtoValueNullableDecimal unitPrice) {
        inventoryIssueLineUpdateDto.setUnitPrice(unitPrice);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder uom(DtoValueString uom) {
        inventoryIssueLineUpdateDto.setUom(uom);
        return this;
    }

    public InventoryIssueLineUpdateDtoBuilder warehouseId(DtoValueString warehouseId) {
        inventoryIssueLineUpdateDto.setWarehouseId(warehouseId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public InventoryIssueLineUpdateDto build() {
        return inventoryIssueLineUpdateDto;
    }
}