/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class StocktakeLineDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5033493982418506616L;
    private Double bookQuantity;
    private Date expirationDate;
    private Double extVarianceCost;
    private InventoryIdNameDto inventory;
    private Date lastModifiedDateTime;
    private Integer lineNbr;
    private LocationIdNameDto location;
    private String lotSerialNbr;
    private Double physicalQuantity;
    private String reasonCode;
    private Status314Enum status;
    private Integer tagNbr;
    private Double unitCost;
    private Double varianceQuantity;
    private WarehouseIdDescriptionDto warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("bookQuantity")
    public Double getBookQuantity ( ) { 
        return this.bookQuantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("bookQuantity")
    public void setBookQuantity (Double value) { 
        this.bookQuantity = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expirationDate")
    public Date getExpirationDate ( ) { 
        return this.expirationDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expirationDate")
    public void setExpirationDate (Date value) { 
        this.expirationDate = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("extVarianceCost")
    public Double getExtVarianceCost ( ) { 
        return this.extVarianceCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("extVarianceCost")
    public void setExtVarianceCost (Double value) { 
        this.extVarianceCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public InventoryIdNameDto getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (InventoryIdNameDto value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTime")
    public Date getLastModifiedDateTime ( ) { 
        return this.lastModifiedDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTime")
    public void setLastModifiedDateTime (Date value) { 
        this.lastModifiedDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineNbr")
    public Integer getLineNbr ( ) { 
        return this.lineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineNbr")
    public void setLineNbr (Integer value) { 
        this.lineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationIdNameDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationIdNameDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lotSerialNbr")
    public String getLotSerialNbr ( ) { 
        return this.lotSerialNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lotSerialNbr")
    public void setLotSerialNbr (String value) { 
        this.lotSerialNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("physicalQuantity")
    public Double getPhysicalQuantity ( ) { 
        return this.physicalQuantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("physicalQuantity")
    public void setPhysicalQuantity (Double value) { 
        this.physicalQuantity = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("reasonCode")
    public String getReasonCode ( ) { 
        return this.reasonCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("reasonCode")
    public void setReasonCode (String value) { 
        this.reasonCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("status")
    public Status314Enum getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("status")
    public void setStatus (Status314Enum value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("tagNbr")
    public Integer getTagNbr ( ) { 
        return this.tagNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("tagNbr")
    public void setTagNbr (Integer value) { 
        this.tagNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("unitCost")
    public Double getUnitCost ( ) { 
        return this.unitCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("unitCost")
    public void setUnitCost (Double value) { 
        this.unitCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("varianceQuantity")
    public Double getVarianceQuantity ( ) { 
        return this.varianceQuantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("varianceQuantity")
    public void setVarianceQuantity (Double value) { 
        this.varianceQuantity = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public WarehouseIdDescriptionDto getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (WarehouseIdDescriptionDto value) { 
        this.warehouse = value;
    }
 
}
 