/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class SalesOrderLineDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5428552108063561843L;
    private String alternateID;
    private Integer branch;
    private Boolean commissionable;
    private Boolean completed;
    private Double discountAmount;
    private String discountCode;
    private Double discountPercent;
    private Double discUnitPrice;
    private Date expirationDate;
    private Double extPrice;
    private Boolean freeItem;
    private InventoryNumberDescriptionDto inventory;
    private String invoiceNbr;
    private String lineDescription;
    private Integer lineNbr;
    private String lotSerialNbr;
    private Boolean manualDiscount;
    private Boolean markForPO;
    private Double openQty;
    private Operation80Enum operation;
    private Double overshipThreshold;
    private PoSourceEnum poSource;
    private Integer projectTask;
    private Double qtyOnShipments;
    private Double quantity;
    private String reasonCode;
    private Date requestedOn;
    private SalesPersonDto salesPerson;
    private ShipCompleteEnum shipComplete;
    private Date shipOn;
    private String taxCategory;
    private Double unbilledAmount;
    private Double undershipThreshold;
    private Double unitPrice;
    private String uom;
    private WarehouseIdDescriptionDto warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("alternateID")
    public String getAlternateID ( ) { 
        return this.alternateID;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("alternateID")
    public void setAlternateID (String value) { 
        this.alternateID = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("branch")
    public Integer getBranch ( ) { 
        return this.branch;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("branch")
    public void setBranch (Integer value) { 
        this.branch = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("commissionable")
    public Boolean getCommissionable ( ) { 
        return this.commissionable;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("commissionable")
    public void setCommissionable (Boolean value) { 
        this.commissionable = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("completed")
    public Boolean getCompleted ( ) { 
        return this.completed;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("completed")
    public void setCompleted (Boolean value) { 
        this.completed = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountAmount")
    public Double getDiscountAmount ( ) { 
        return this.discountAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountAmount")
    public void setDiscountAmount (Double value) { 
        this.discountAmount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountCode")
    public String getDiscountCode ( ) { 
        return this.discountCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountCode")
    public void setDiscountCode (String value) { 
        this.discountCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountPercent")
    public Double getDiscountPercent ( ) { 
        return this.discountPercent;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountPercent")
    public void setDiscountPercent (Double value) { 
        this.discountPercent = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discUnitPrice")
    public Double getDiscUnitPrice ( ) { 
        return this.discUnitPrice;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discUnitPrice")
    public void setDiscUnitPrice (Double value) { 
        this.discUnitPrice = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expirationDate")
    public Date getExpirationDate ( ) { 
        return this.expirationDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expirationDate")
    public void setExpirationDate (Date value) { 
        this.expirationDate = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("extPrice")
    public Double getExtPrice ( ) { 
        return this.extPrice;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("extPrice")
    public void setExtPrice (Double value) { 
        this.extPrice = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("freeItem")
    public Boolean getFreeItem ( ) { 
        return this.freeItem;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("freeItem")
    public void setFreeItem (Boolean value) { 
        this.freeItem = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public InventoryNumberDescriptionDto getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (InventoryNumberDescriptionDto value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("invoiceNbr")
    public String getInvoiceNbr ( ) { 
        return this.invoiceNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("invoiceNbr")
    public void setInvoiceNbr (String value) { 
        this.invoiceNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineDescription")
    public String getLineDescription ( ) { 
        return this.lineDescription;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineDescription")
    public void setLineDescription (String value) { 
        this.lineDescription = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineNbr")
    public Integer getLineNbr ( ) { 
        return this.lineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineNbr")
    public void setLineNbr (Integer value) { 
        this.lineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lotSerialNbr")
    public String getLotSerialNbr ( ) { 
        return this.lotSerialNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lotSerialNbr")
    public void setLotSerialNbr (String value) { 
        this.lotSerialNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("manualDiscount")
    public Boolean getManualDiscount ( ) { 
        return this.manualDiscount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("manualDiscount")
    public void setManualDiscount (Boolean value) { 
        this.manualDiscount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("markForPO")
    public Boolean getMarkForPO ( ) { 
        return this.markForPO;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("markForPO")
    public void setMarkForPO (Boolean value) { 
        this.markForPO = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("openQty")
    public Double getOpenQty ( ) { 
        return this.openQty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("openQty")
    public void setOpenQty (Double value) { 
        this.openQty = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("operation")
    public Operation80Enum getOperation ( ) { 
        return this.operation;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("operation")
    public void setOperation (Operation80Enum value) { 
        this.operation = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("overshipThreshold")
    public Double getOvershipThreshold ( ) { 
        return this.overshipThreshold;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("overshipThreshold")
    public void setOvershipThreshold (Double value) { 
        this.overshipThreshold = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("poSource")
    public PoSourceEnum getPoSource ( ) { 
        return this.poSource;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("poSource")
    public void setPoSource (PoSourceEnum value) { 
        this.poSource = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("projectTask")
    public Integer getProjectTask ( ) { 
        return this.projectTask;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("projectTask")
    public void setProjectTask (Integer value) { 
        this.projectTask = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("qtyOnShipments")
    public Double getQtyOnShipments ( ) { 
        return this.qtyOnShipments;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("qtyOnShipments")
    public void setQtyOnShipments (Double value) { 
        this.qtyOnShipments = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("quantity")
    public Double getQuantity ( ) { 
        return this.quantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("quantity")
    public void setQuantity (Double value) { 
        this.quantity = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("reasonCode")
    public String getReasonCode ( ) { 
        return this.reasonCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("reasonCode")
    public void setReasonCode (String value) { 
        this.reasonCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("requestedOn")
    public Date getRequestedOn ( ) { 
        return this.requestedOn;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("requestedOn")
    public void setRequestedOn (Date value) { 
        this.requestedOn = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("salesPerson")
    public SalesPersonDto getSalesPerson ( ) { 
        return this.salesPerson;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("salesPerson")
    public void setSalesPerson (SalesPersonDto value) { 
        this.salesPerson = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("shipComplete")
    public ShipCompleteEnum getShipComplete ( ) { 
        return this.shipComplete;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("shipComplete")
    public void setShipComplete (ShipCompleteEnum value) { 
        this.shipComplete = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("shipOn")
    public Date getShipOn ( ) { 
        return this.shipOn;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("shipOn")
    public void setShipOn (Date value) { 
        this.shipOn = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("taxCategory")
    public String getTaxCategory ( ) { 
        return this.taxCategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("taxCategory")
    public void setTaxCategory (String value) { 
        this.taxCategory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("unbilledAmount")
    public Double getUnbilledAmount ( ) { 
        return this.unbilledAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("unbilledAmount")
    public void setUnbilledAmount (Double value) { 
        this.unbilledAmount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("undershipThreshold")
    public Double getUndershipThreshold ( ) { 
        return this.undershipThreshold;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("undershipThreshold")
    public void setUndershipThreshold (Double value) { 
        this.undershipThreshold = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("unitPrice")
    public Double getUnitPrice ( ) { 
        return this.unitPrice;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("unitPrice")
    public void setUnitPrice (Double value) { 
        this.unitPrice = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("uom")
    public String getUom ( ) { 
        return this.uom;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("uom")
    public void setUom (String value) { 
        this.uom = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public WarehouseIdDescriptionDto getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (WarehouseIdDescriptionDto value) { 
        this.warehouse = value;
    }
 
}
 