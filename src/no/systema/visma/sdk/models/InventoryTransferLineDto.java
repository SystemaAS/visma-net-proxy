/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class InventoryTransferLineDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5540254365489646891L;
    private String description;
    private InventoryNumberDescriptionDto inventoryItem;
    private Integer lineNumber;
    private LocationDto location;
    private Double quantity;
    private ReasonCodeDto reasonCode;
    private LocationDto toLocation;
    private String uom;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventoryItem")
    public InventoryNumberDescriptionDto getInventoryItem ( ) { 
        return this.inventoryItem;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventoryItem")
    public void setInventoryItem (InventoryNumberDescriptionDto value) { 
        this.inventoryItem = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineNumber")
    public Integer getLineNumber ( ) { 
        return this.lineNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineNumber")
    public void setLineNumber (Integer value) { 
        this.lineNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("quantity")
    public Double getQuantity ( ) { 
        return this.quantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("quantity")
    public void setQuantity (Double value) { 
        this.quantity = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("reasonCode")
    public ReasonCodeDto getReasonCode ( ) { 
        return this.reasonCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("reasonCode")
    public void setReasonCode (ReasonCodeDto value) { 
        this.reasonCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("toLocation")
    public LocationDto getToLocation ( ) { 
        return this.toLocation;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("toLocation")
    public void setToLocation (LocationDto value) { 
        this.toLocation = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("uom")
    public String getUom ( ) { 
        return this.uom;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("uom")
    public void setUom (String value) { 
        this.uom = value;
    }
 
}
 