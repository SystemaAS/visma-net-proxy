/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class PurchaseOrderLineDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4851147072894946525L;
    private AccountNumberTypeDescriptionDto account;
    private String alternateId;
    private Double amount;
    private BranchNumberDto branch;
    private Boolean canceled;
    private Boolean completed;
    private Double completeOn;
    private String description;
    private Double discountAmount;
    private DiscountCodeNumberDescriptionDto discountCode;
    private Double discountPercent;
    private Double extCost;
    private InventoryNumberDescriptionDto inventory;
    private String lineDescription;
    private Integer lineNbr;
    private LineTypeEnum lineType;
    private Boolean manualDiscount;
    private Double maxReceipt;
    private Double minReceipt;
    private String orderNumber;
    private Double orderQty;
    private OrderTypeEnum orderType;
    private ProjectDto project;
    private ProjectTaskDto projectTask;
    private Date promised;
    private Double qtyOnReceipts;
    private ReceiptActionEnum receiptAction;
    private Double receivedAmt;
    private Date requested;
    private SubAccountDto sub;
    private TaxCategoryNumberDescriptionDto taxCategory;
    private Double unitCost;
    private String uom;
    private WarehouseIdDescriptionDto warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("account")
    public AccountNumberTypeDescriptionDto getAccount ( ) { 
        return this.account;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("account")
    public void setAccount (AccountNumberTypeDescriptionDto value) { 
        this.account = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("alternateId")
    public String getAlternateId ( ) { 
        return this.alternateId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("alternateId")
    public void setAlternateId (String value) { 
        this.alternateId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("amount")
    public Double getAmount ( ) { 
        return this.amount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("amount")
    public void setAmount (Double value) { 
        this.amount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("branch")
    public BranchNumberDto getBranch ( ) { 
        return this.branch;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("branch")
    public void setBranch (BranchNumberDto value) { 
        this.branch = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("canceled")
    public Boolean getCanceled ( ) { 
        return this.canceled;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("canceled")
    public void setCanceled (Boolean value) { 
        this.canceled = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("completed")
    public Boolean getCompleted ( ) { 
        return this.completed;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("completed")
    public void setCompleted (Boolean value) { 
        this.completed = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("completeOn")
    public Double getCompleteOn ( ) { 
        return this.completeOn;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("completeOn")
    public void setCompleteOn (Double value) { 
        this.completeOn = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountAmount")
    public Double getDiscountAmount ( ) { 
        return this.discountAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountAmount")
    public void setDiscountAmount (Double value) { 
        this.discountAmount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountCode")
    public DiscountCodeNumberDescriptionDto getDiscountCode ( ) { 
        return this.discountCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountCode")
    public void setDiscountCode (DiscountCodeNumberDescriptionDto value) { 
        this.discountCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountPercent")
    public Double getDiscountPercent ( ) { 
        return this.discountPercent;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountPercent")
    public void setDiscountPercent (Double value) { 
        this.discountPercent = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("extCost")
    public Double getExtCost ( ) { 
        return this.extCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("extCost")
    public void setExtCost (Double value) { 
        this.extCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public InventoryNumberDescriptionDto getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (InventoryNumberDescriptionDto value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineDescription")
    public String getLineDescription ( ) { 
        return this.lineDescription;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineDescription")
    public void setLineDescription (String value) { 
        this.lineDescription = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineNbr")
    public Integer getLineNbr ( ) { 
        return this.lineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineNbr")
    public void setLineNbr (Integer value) { 
        this.lineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineType")
    public LineTypeEnum getLineType ( ) { 
        return this.lineType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineType")
    public void setLineType (LineTypeEnum value) { 
        this.lineType = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("manualDiscount")
    public Boolean getManualDiscount ( ) { 
        return this.manualDiscount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("manualDiscount")
    public void setManualDiscount (Boolean value) { 
        this.manualDiscount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("maxReceipt")
    public Double getMaxReceipt ( ) { 
        return this.maxReceipt;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("maxReceipt")
    public void setMaxReceipt (Double value) { 
        this.maxReceipt = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("minReceipt")
    public Double getMinReceipt ( ) { 
        return this.minReceipt;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("minReceipt")
    public void setMinReceipt (Double value) { 
        this.minReceipt = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("orderNumber")
    public String getOrderNumber ( ) { 
        return this.orderNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("orderNumber")
    public void setOrderNumber (String value) { 
        this.orderNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("orderQty")
    public Double getOrderQty ( ) { 
        return this.orderQty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("orderQty")
    public void setOrderQty (Double value) { 
        this.orderQty = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("orderType")
    public OrderTypeEnum getOrderType ( ) { 
        return this.orderType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("orderType")
    public void setOrderType (OrderTypeEnum value) { 
        this.orderType = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("project")
    public ProjectDto getProject ( ) { 
        return this.project;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("project")
    public void setProject (ProjectDto value) { 
        this.project = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("projectTask")
    public ProjectTaskDto getProjectTask ( ) { 
        return this.projectTask;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("projectTask")
    public void setProjectTask (ProjectTaskDto value) { 
        this.projectTask = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("promised")
    public Date getPromised ( ) { 
        return this.promised;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("promised")
    public void setPromised (Date value) { 
        this.promised = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("qtyOnReceipts")
    public Double getQtyOnReceipts ( ) { 
        return this.qtyOnReceipts;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("qtyOnReceipts")
    public void setQtyOnReceipts (Double value) { 
        this.qtyOnReceipts = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("receiptAction")
    public ReceiptActionEnum getReceiptAction ( ) { 
        return this.receiptAction;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("receiptAction")
    public void setReceiptAction (ReceiptActionEnum value) { 
        this.receiptAction = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("receivedAmt")
    public Double getReceivedAmt ( ) { 
        return this.receivedAmt;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("receivedAmt")
    public void setReceivedAmt (Double value) { 
        this.receivedAmt = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("requested")
    public Date getRequested ( ) { 
        return this.requested;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("requested")
    public void setRequested (Date value) { 
        this.requested = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("sub")
    public SubAccountDto getSub ( ) { 
        return this.sub;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("sub")
    public void setSub (SubAccountDto value) { 
        this.sub = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("taxCategory")
    public TaxCategoryNumberDescriptionDto getTaxCategory ( ) { 
        return this.taxCategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("taxCategory")
    public void setTaxCategory (TaxCategoryNumberDescriptionDto value) { 
        this.taxCategory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("unitCost")
    public Double getUnitCost ( ) { 
        return this.unitCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("unitCost")
    public void setUnitCost (Double value) { 
        this.unitCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("uom")
    public String getUom ( ) { 
        return this.uom;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("uom")
    public void setUom (String value) { 
        this.uom = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public WarehouseIdDescriptionDto getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (WarehouseIdDescriptionDto value) { 
        this.warehouse = value;
    }
 
}
 