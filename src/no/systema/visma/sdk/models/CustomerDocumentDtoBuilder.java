/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class CustomerDocumentDtoBuilder {
    //the instance to build
    private CustomerDocumentDto customerDocumentDto;

    /**
     * Default constructor to initialize the instance
     */
    public CustomerDocumentDtoBuilder() {
        customerDocumentDto = new CustomerDocumentDto();
    }

    public CustomerDocumentDtoBuilder account(AccountNumberDto account) {
        customerDocumentDto.setAccount(account);
        return this;
    }

    public CustomerDocumentDtoBuilder amount(Double amount) {
        customerDocumentDto.setAmount(amount);
        return this;
    }

    public CustomerDocumentDtoBuilder amountInCurrency(Double amountInCurrency) {
        customerDocumentDto.setAmountInCurrency(amountInCurrency);
        return this;
    }

    public CustomerDocumentDtoBuilder balance(Double balance) {
        customerDocumentDto.setBalance(balance);
        return this;
    }

    public CustomerDocumentDtoBuilder balanceInCurrency(Double balanceInCurrency) {
        customerDocumentDto.setBalanceInCurrency(balanceInCurrency);
        return this;
    }

    public CustomerDocumentDtoBuilder branch(BranchNumberDto branch) {
        customerDocumentDto.setBranch(branch);
        return this;
    }

    public CustomerDocumentDtoBuilder cashDiscount(Double cashDiscount) {
        customerDocumentDto.setCashDiscount(cashDiscount);
        return this;
    }

    public CustomerDocumentDtoBuilder cashDiscountInCurrency(Double cashDiscountInCurrency) {
        customerDocumentDto.setCashDiscountInCurrency(cashDiscountInCurrency);
        return this;
    }

    public CustomerDocumentDtoBuilder createdDateTime(Date createdDateTime) {
        customerDocumentDto.setCreatedDateTime(createdDateTime);
        return this;
    }

    public CustomerDocumentDtoBuilder currencyId(String currencyId) {
        customerDocumentDto.setCurrencyId(currencyId);
        return this;
    }

    public CustomerDocumentDtoBuilder customer(CustomerNumberDto customer) {
        customerDocumentDto.setCustomer(customer);
        return this;
    }

    public CustomerDocumentDtoBuilder customerRefNumber(String customerRefNumber) {
        customerDocumentDto.setCustomerRefNumber(customerRefNumber);
        return this;
    }

    public CustomerDocumentDtoBuilder documentDate(Date documentDate) {
        customerDocumentDto.setDocumentDate(documentDate);
        return this;
    }

    public CustomerDocumentDtoBuilder documentDueDate(Date documentDueDate) {
        customerDocumentDto.setDocumentDueDate(documentDueDate);
        return this;
    }

    public CustomerDocumentDtoBuilder documentType(DocumentTypeEnum documentType) {
        customerDocumentDto.setDocumentType(documentType);
        return this;
    }

    public CustomerDocumentDtoBuilder financialPeriod(String financialPeriod) {
        customerDocumentDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public CustomerDocumentDtoBuilder invoiceText(String invoiceText) {
        customerDocumentDto.setInvoiceText(invoiceText);
        return this;
    }

    public CustomerDocumentDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        customerDocumentDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public CustomerDocumentDtoBuilder location(LocationDto location) {
        customerDocumentDto.setLocation(location);
        return this;
    }

    public CustomerDocumentDtoBuilder note(String note) {
        customerDocumentDto.setNote(note);
        return this;
    }

    public CustomerDocumentDtoBuilder paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
        customerDocumentDto.setPaymentMethod(paymentMethod);
        return this;
    }

    public CustomerDocumentDtoBuilder postPeriod(String postPeriod) {
        customerDocumentDto.setPostPeriod(postPeriod);
        return this;
    }

    public CustomerDocumentDtoBuilder referenceNumber(String referenceNumber) {
        customerDocumentDto.setReferenceNumber(referenceNumber);
        return this;
    }

    public CustomerDocumentDtoBuilder status(StatusEnum status) {
        customerDocumentDto.setStatus(status);
        return this;
    }

    public CustomerDocumentDtoBuilder subaccount(SubAccountDto subaccount) {
        customerDocumentDto.setSubaccount(subaccount);
        return this;
    }

    public CustomerDocumentDtoBuilder vatTotal(Double vatTotal) {
        customerDocumentDto.setVatTotal(vatTotal);
        return this;
    }

    public CustomerDocumentDtoBuilder vatTotalInCurrency(Double vatTotalInCurrency) {
        customerDocumentDto.setVatTotalInCurrency(vatTotalInCurrency);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CustomerDocumentDto build() {
        return customerDocumentDto;
    }
}