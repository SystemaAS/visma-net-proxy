/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class CustomerInvoiceLinesUpdateDtoBuilder {
    //the instance to build
    private CustomerInvoiceLinesUpdateDto customerInvoiceLinesUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public CustomerInvoiceLinesUpdateDtoBuilder() {
        customerInvoiceLinesUpdateDto = new CustomerInvoiceLinesUpdateDto();
    }

    public CustomerInvoiceLinesUpdateDtoBuilder accountNumber(DtoValueString accountNumber) {
        customerInvoiceLinesUpdateDto.setAccountNumber(accountNumber);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder deferralCode(DtoValueString deferralCode) {
        customerInvoiceLinesUpdateDto.setDeferralCode(deferralCode);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder deferralSchedule(DtoValueInt32 deferralSchedule) {
        customerInvoiceLinesUpdateDto.setDeferralSchedule(deferralSchedule);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder description(DtoValueString description) {
        customerInvoiceLinesUpdateDto.setDescription(description);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder discountAmountInCurrency(DtoValueDecimal discountAmountInCurrency) {
        customerInvoiceLinesUpdateDto.setDiscountAmountInCurrency(discountAmountInCurrency);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder discountCode(DtoValueString discountCode) {
        customerInvoiceLinesUpdateDto.setDiscountCode(discountCode);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder discountPercent(DtoValueDecimal discountPercent) {
        customerInvoiceLinesUpdateDto.setDiscountPercent(discountPercent);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder inventoryNumber(DtoValueString inventoryNumber) {
        customerInvoiceLinesUpdateDto.setInventoryNumber(inventoryNumber);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder lineNumber(DtoValueInt32 lineNumber) {
        customerInvoiceLinesUpdateDto.setLineNumber(lineNumber);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder manualAmountInCurrency(DtoValueDecimal manualAmountInCurrency) {
        customerInvoiceLinesUpdateDto.setManualAmountInCurrency(manualAmountInCurrency);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder manualDiscount(DtoValueBoolean manualDiscount) {
        customerInvoiceLinesUpdateDto.setManualDiscount(manualDiscount);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder note(DtoValueString note) {
        customerInvoiceLinesUpdateDto.setNote(note);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder operation(OperationEnum operation) {
        customerInvoiceLinesUpdateDto.setOperation(operation);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder quantity(DtoValueDecimal quantity) {
        customerInvoiceLinesUpdateDto.setQuantity(quantity);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder salesperson(DtoValueString salesperson) {
        customerInvoiceLinesUpdateDto.setSalesperson(salesperson);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder subaccount(List<SegmentUpdateDto> subaccount) {
        customerInvoiceLinesUpdateDto.setSubaccount(subaccount);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder termEndDate(DtoValueDateTime termEndDate) {
        customerInvoiceLinesUpdateDto.setTermEndDate(termEndDate);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder termStartDate(DtoValueDateTime termStartDate) {
        customerInvoiceLinesUpdateDto.setTermStartDate(termStartDate);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder unitPriceInCurrency(DtoValueDecimal unitPriceInCurrency) {
        customerInvoiceLinesUpdateDto.setUnitPriceInCurrency(unitPriceInCurrency);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder uom(DtoValueString uom) {
        customerInvoiceLinesUpdateDto.setUom(uom);
        return this;
    }

    public CustomerInvoiceLinesUpdateDtoBuilder vatCodeId(DtoValueString vatCodeId) {
        customerInvoiceLinesUpdateDto.setVatCodeId(vatCodeId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CustomerInvoiceLinesUpdateDto build() {
        return customerInvoiceLinesUpdateDto;
    }
}