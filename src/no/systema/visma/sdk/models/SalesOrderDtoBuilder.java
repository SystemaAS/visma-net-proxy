/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class SalesOrderDtoBuilder {
    //the instance to build
    private SalesOrderDto salesOrderDto;

    /**
     * Default constructor to initialize the instance
     */
    public SalesOrderDtoBuilder() {
        salesOrderDto = new SalesOrderDto();
    }

    public SalesOrderDtoBuilder branch(BranchNumberDto branch) {
        salesOrderDto.setBranch(branch);
        return this;
    }

    public SalesOrderDtoBuilder cancelBy(Date cancelBy) {
        salesOrderDto.setCancelBy(cancelBy);
        return this;
    }

    public SalesOrderDtoBuilder canceled(Boolean canceled) {
        salesOrderDto.setCanceled(canceled);
        return this;
    }

    public SalesOrderDtoBuilder cashDiscountDate(Date cashDiscountDate) {
        salesOrderDto.setCashDiscountDate(cashDiscountDate);
        return this;
    }

    public SalesOrderDtoBuilder currency(String currency) {
        salesOrderDto.setCurrency(currency);
        return this;
    }

    public SalesOrderDtoBuilder customer(CustomerDescriptionDto customer) {
        salesOrderDto.setCustomer(customer);
        return this;
    }

    public SalesOrderDtoBuilder customerOrder(String customerOrder) {
        salesOrderDto.setCustomerOrder(customerOrder);
        return this;
    }

    public SalesOrderDtoBuilder customerRefNo(String customerRefNo) {
        salesOrderDto.setCustomerRefNo(customerRefNo);
        return this;
    }

    public SalesOrderDtoBuilder customerVATZone(VatZoneDto customerVATZone) {
        salesOrderDto.setCustomerVATZone(customerVATZone);
        return this;
    }

    public SalesOrderDtoBuilder date(Date date) {
        salesOrderDto.setDate(date);
        return this;
    }

    public SalesOrderDtoBuilder description(String description) {
        salesOrderDto.setDescription(description);
        return this;
    }

    public SalesOrderDtoBuilder dueDate(Date dueDate) {
        salesOrderDto.setDueDate(dueDate);
        return this;
    }

    public SalesOrderDtoBuilder fobPoint(FOBPointDescriptionDto fobPoint) {
        salesOrderDto.setFobPoint(fobPoint);
        return this;
    }

    public SalesOrderDtoBuilder hold(Boolean hold) {
        salesOrderDto.setHold(hold);
        return this;
    }

    public SalesOrderDtoBuilder insurance(Boolean insurance) {
        salesOrderDto.setInsurance(insurance);
        return this;
    }

    public SalesOrderDtoBuilder invoiceDate(Date invoiceDate) {
        salesOrderDto.setInvoiceDate(invoiceDate);
        return this;
    }

    public SalesOrderDtoBuilder invoiceNbr(String invoiceNbr) {
        salesOrderDto.setInvoiceNbr(invoiceNbr);
        return this;
    }

    public SalesOrderDtoBuilder invoiceSeparately(Boolean invoiceSeparately) {
        salesOrderDto.setInvoiceSeparately(invoiceSeparately);
        return this;
    }

    public SalesOrderDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        salesOrderDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public SalesOrderDtoBuilder lines(List<SalesOrderLineDto> lines) {
        salesOrderDto.setLines(lines);
        return this;
    }

    public SalesOrderDtoBuilder location(LocationDto location) {
        salesOrderDto.setLocation(location);
        return this;
    }

    public SalesOrderDtoBuilder orderNo(String orderNo) {
        salesOrderDto.setOrderNo(orderNo);
        return this;
    }

    public SalesOrderDtoBuilder orderTotal(Double orderTotal) {
        salesOrderDto.setOrderTotal(orderTotal);
        return this;
    }

    public SalesOrderDtoBuilder orderType(String orderType) {
        salesOrderDto.setOrderType(orderType);
        return this;
    }

    public SalesOrderDtoBuilder origOrderNbr(String origOrderNbr) {
        salesOrderDto.setOrigOrderNbr(origOrderNbr);
        return this;
    }

    public SalesOrderDtoBuilder origOrderType(String origOrderType) {
        salesOrderDto.setOrigOrderType(origOrderType);
        return this;
    }

    public SalesOrderDtoBuilder owner(UserDescriptionDto owner) {
        salesOrderDto.setOwner(owner);
        return this;
    }

    public SalesOrderDtoBuilder postPeriod(String postPeriod) {
        salesOrderDto.setPostPeriod(postPeriod);
        return this;
    }

    public SalesOrderDtoBuilder preferredWarehouse(WarehouseDto preferredWarehouse) {
        salesOrderDto.setPreferredWarehouse(preferredWarehouse);
        return this;
    }

    public SalesOrderDtoBuilder printDescriptionOnInvoice(Boolean printDescriptionOnInvoice) {
        salesOrderDto.setPrintDescriptionOnInvoice(printDescriptionOnInvoice);
        return this;
    }

    public SalesOrderDtoBuilder printNoteOnExternalDocuments(Boolean printNoteOnExternalDocuments) {
        salesOrderDto.setPrintNoteOnExternalDocuments(printNoteOnExternalDocuments);
        return this;
    }

    public SalesOrderDtoBuilder printNoteOnInternalDocuments(Boolean printNoteOnInternalDocuments) {
        salesOrderDto.setPrintNoteOnInternalDocuments(printNoteOnInternalDocuments);
        return this;
    }

    public SalesOrderDtoBuilder priority(Integer priority) {
        salesOrderDto.setPriority(priority);
        return this;
    }

    public SalesOrderDtoBuilder project(Integer project) {
        salesOrderDto.setProject(project);
        return this;
    }

    public SalesOrderDtoBuilder requestOn(Date requestOn) {
        salesOrderDto.setRequestOn(requestOn);
        return this;
    }

    public SalesOrderDtoBuilder residentialDelivery(Boolean residentialDelivery) {
        salesOrderDto.setResidentialDelivery(residentialDelivery);
        return this;
    }

    public SalesOrderDtoBuilder salesPerson(SalesPersonDto salesPerson) {
        salesOrderDto.setSalesPerson(salesPerson);
        return this;
    }

    public SalesOrderDtoBuilder saturdayDelivery(Boolean saturdayDelivery) {
        salesOrderDto.setSaturdayDelivery(saturdayDelivery);
        return this;
    }

    public SalesOrderDtoBuilder schedShipment(Date schedShipment) {
        salesOrderDto.setSchedShipment(schedShipment);
        return this;
    }

    public SalesOrderDtoBuilder shipComplete(ShipCompleteEnum shipComplete) {
        salesOrderDto.setShipComplete(shipComplete);
        return this;
    }

    public SalesOrderDtoBuilder shippingTerms(ShippingTermsDescriptionDto shippingTerms) {
        salesOrderDto.setShippingTerms(shippingTerms);
        return this;
    }

    public SalesOrderDtoBuilder shippingZone(ShippingZoneDescriptionDto shippingZone) {
        salesOrderDto.setShippingZone(shippingZone);
        return this;
    }

    public SalesOrderDtoBuilder shipSeparately(Boolean shipSeparately) {
        salesOrderDto.setShipSeparately(shipSeparately);
        return this;
    }

    public SalesOrderDtoBuilder shipVia(CarrierDescriptionDto shipVia) {
        salesOrderDto.setShipVia(shipVia);
        return this;
    }

    public SalesOrderDtoBuilder soBillingAddress(SalesOrderAddressDto soBillingAddress) {
        salesOrderDto.setSoBillingAddress(soBillingAddress);
        return this;
    }

    public SalesOrderDtoBuilder soBillingContact(SalesOrderContactDto soBillingContact) {
        salesOrderDto.setSoBillingContact(soBillingContact);
        return this;
    }

    public SalesOrderDtoBuilder soShippingAddress(SalesOrderAddressDto soShippingAddress) {
        salesOrderDto.setSoShippingAddress(soShippingAddress);
        return this;
    }

    public SalesOrderDtoBuilder soShippingContact(SalesOrderContactDto soShippingContact) {
        salesOrderDto.setSoShippingContact(soShippingContact);
        return this;
    }

    public SalesOrderDtoBuilder status(Status85Enum status) {
        salesOrderDto.setStatus(status);
        return this;
    }

    public SalesOrderDtoBuilder taxTotal(Double taxTotal) {
        salesOrderDto.setTaxTotal(taxTotal);
        return this;
    }

    public SalesOrderDtoBuilder terms(CreditTermsDto terms) {
        salesOrderDto.setTerms(terms);
        return this;
    }

    public SalesOrderDtoBuilder transactionType(SigmaIntrastatTransactionDescriptionDto transactionType) {
        salesOrderDto.setTransactionType(transactionType);
        return this;
    }

    public SalesOrderDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        salesOrderDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public SalesOrderDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        salesOrderDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public SalesOrderDto build() {
        return salesOrderDto;
    }
}