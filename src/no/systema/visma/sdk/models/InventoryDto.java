/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class InventoryDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5107215593932799943L;
    private List<InventoryCrossReferenceDto> crossReferences;
    private Double defaultPrice;
    private String description;
    private Integer inventoryId;
    private String inventoryNumber;
    private ItemClassDto itemClass;
    private Date lastModifiedDateTime;
    private PostingClassDto postingClass;
    private Status144Enum status;
    private Type145Enum type;
    private VatCodeDto vatCode;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("crossReferences")
    public List<InventoryCrossReferenceDto> getCrossReferences ( ) { 
        return this.crossReferences;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("crossReferences")
    public void setCrossReferences (List<InventoryCrossReferenceDto> value) { 
        this.crossReferences = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("defaultPrice")
    public Double getDefaultPrice ( ) { 
        return this.defaultPrice;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("defaultPrice")
    public void setDefaultPrice (Double value) { 
        this.defaultPrice = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventoryId")
    public Integer getInventoryId ( ) { 
        return this.inventoryId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventoryId")
    public void setInventoryId (Integer value) { 
        this.inventoryId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventoryNumber")
    public String getInventoryNumber ( ) { 
        return this.inventoryNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventoryNumber")
    public void setInventoryNumber (String value) { 
        this.inventoryNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("itemClass")
    public ItemClassDto getItemClass ( ) { 
        return this.itemClass;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("itemClass")
    public void setItemClass (ItemClassDto value) { 
        this.itemClass = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTime")
    public Date getLastModifiedDateTime ( ) { 
        return this.lastModifiedDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTime")
    public void setLastModifiedDateTime (Date value) { 
        this.lastModifiedDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("postingClass")
    public PostingClassDto getPostingClass ( ) { 
        return this.postingClass;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("postingClass")
    public void setPostingClass (PostingClassDto value) { 
        this.postingClass = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("status")
    public Status144Enum getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("status")
    public void setStatus (Status144Enum value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("type")
    public Type145Enum getType ( ) { 
        return this.type;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("type")
    public void setType (Type145Enum value) { 
        this.type = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("vatCode")
    public VatCodeDto getVatCode ( ) { 
        return this.vatCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("vatCode")
    public void setVatCode (VatCodeDto value) { 
        this.vatCode = value;
    }
 
}
 