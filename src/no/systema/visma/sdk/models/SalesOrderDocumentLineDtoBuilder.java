/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class SalesOrderDocumentLineDtoBuilder {
    //the instance to build
    private SalesOrderDocumentLineDto salesOrderDocumentLineDto;

    /**
     * Default constructor to initialize the instance
     */
    public SalesOrderDocumentLineDtoBuilder() {
        salesOrderDocumentLineDto = new SalesOrderDocumentLineDto();
    }

    public SalesOrderDocumentLineDtoBuilder discountAmount(Double discountAmount) {
        salesOrderDocumentLineDto.setDiscountAmount(discountAmount);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder discountCode(String discountCode) {
        salesOrderDocumentLineDto.setDiscountCode(discountCode);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder discountPercent(Double discountPercent) {
        salesOrderDocumentLineDto.setDiscountPercent(discountPercent);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder discUnitPrice(Double discUnitPrice) {
        salesOrderDocumentLineDto.setDiscUnitPrice(discUnitPrice);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder extPrice(Double extPrice) {
        salesOrderDocumentLineDto.setExtPrice(extPrice);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder inventory(InventoryNumberDescriptionDto inventory) {
        salesOrderDocumentLineDto.setInventory(inventory);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder lineDescription(String lineDescription) {
        salesOrderDocumentLineDto.setLineDescription(lineDescription);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder lineNbr(Integer lineNbr) {
        salesOrderDocumentLineDto.setLineNbr(lineNbr);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder manualDiscount(Boolean manualDiscount) {
        salesOrderDocumentLineDto.setManualDiscount(manualDiscount);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder openQty(Double openQty) {
        salesOrderDocumentLineDto.setOpenQty(openQty);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder qtyOnShipments(Double qtyOnShipments) {
        salesOrderDocumentLineDto.setQtyOnShipments(qtyOnShipments);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder quantity(Double quantity) {
        salesOrderDocumentLineDto.setQuantity(quantity);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder unbilledAmount(Double unbilledAmount) {
        salesOrderDocumentLineDto.setUnbilledAmount(unbilledAmount);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder unitPrice(Double unitPrice) {
        salesOrderDocumentLineDto.setUnitPrice(unitPrice);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder uom(String uom) {
        salesOrderDocumentLineDto.setUom(uom);
        return this;
    }

    public SalesOrderDocumentLineDtoBuilder warehouse(WarehouseIdDescriptionDto warehouse) {
        salesOrderDocumentLineDto.setWarehouse(warehouse);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public SalesOrderDocumentLineDto build() {
        return salesOrderDocumentLineDto;
    }
}