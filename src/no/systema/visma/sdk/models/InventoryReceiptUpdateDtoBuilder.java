/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class InventoryReceiptUpdateDtoBuilder {
    //the instance to build
    private InventoryReceiptUpdateDto inventoryReceiptUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public InventoryReceiptUpdateDtoBuilder() {
        inventoryReceiptUpdateDto = new InventoryReceiptUpdateDto();
    }

    /**
     * The manually entered summary amount for all specified inventory receipt items.
     */
    public InventoryReceiptUpdateDtoBuilder controlCost(DtoValueNullableDecimal controlCost) {
        inventoryReceiptUpdateDto.setControlCost(controlCost);
        return this;
    }

    /**
     * The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
     */
    public InventoryReceiptUpdateDtoBuilder controlQuantity(DtoValueNullableDecimal controlQuantity) {
        inventoryReceiptUpdateDto.setControlQuantity(controlQuantity);
        return this;
    }

    /**
     * The date when the receipt was created. All transactions included in this document will have this transaction date.
     */
    public InventoryReceiptUpdateDtoBuilder date(DtoValueNullableDateTime date) {
        inventoryReceiptUpdateDto.setDate(date);
        return this;
    }

    /**
     * A brief description of the inventory issue or its transactions.
     */
    public InventoryReceiptUpdateDtoBuilder description(DtoValueString description) {
        inventoryReceiptUpdateDto.setDescription(description);
        return this;
    }

    /**
     * The external reference number of the inventory issue document (for example, the vendor’s reference code).
     */
    public InventoryReceiptUpdateDtoBuilder externalReference(DtoValueString externalReference) {
        inventoryReceiptUpdateDto.setExternalReference(externalReference);
        return this;
    }

    /**
     * A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
     */
    public InventoryReceiptUpdateDtoBuilder hold(DtoValueNullableBoolean hold) {
        inventoryReceiptUpdateDto.setHold(hold);
        return this;
    }

    /**
     * The financial period to which the transactions recorded in the document should be posted.
     */
    public InventoryReceiptUpdateDtoBuilder postPeriod(DtoValueString postPeriod) {
        inventoryReceiptUpdateDto.setPostPeriod(postPeriod);
        return this;
    }

    /**
     * The inventory issue lines
     */
    public InventoryReceiptUpdateDtoBuilder receiptLines(List<InventoryReceiptLineUpdateDto> receiptLines) {
        inventoryReceiptUpdateDto.setReceiptLines(receiptLines);
        return this;
    }

    /**
     * The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
     */
    public InventoryReceiptUpdateDtoBuilder referenceNumber(DtoValueString referenceNumber) {
        inventoryReceiptUpdateDto.setReferenceNumber(referenceNumber);
        return this;
    }

    /**
     * The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
     */
    public InventoryReceiptUpdateDtoBuilder transferNumber(DtoValueString transferNumber) {
        inventoryReceiptUpdateDto.setTransferNumber(transferNumber);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public InventoryReceiptUpdateDto build() {
        return inventoryReceiptUpdateDto;
    }
}