/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class PurchaseReceiptLineDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4994484252486131312L;
    private AccountNumberTypeDescriptionDto account;
    private AccountNumberTypeDescriptionDto actualAccount;
    private SubAccountDescriptionDto actualSub;
    private List<AllocationsDto> allocations;
    private Double amount;
    private BranchNumberDto branch;
    private Boolean completePoLine;
    private String description;
    private Double discountAmount;
    private DiscountCodeNumberDescriptionDto discountCode;
    private Double discountPercent;
    private Date expirationDate;
    private Double extCost;
    private InventoryNumberDescriptionDto inventory;
    private String lineDescription;
    private Integer lineNbr;
    private LineTypeEnum lineType;
    private LocationIdNameDto location;
    private String lotSerialNumber;
    private Boolean manualDiscount;
    private Double openQty;
    private Double orderQty;
    private Integer poOrderLineNbr;
    private String poOrderNbr;
    private PoOrderTypeEnum poOrderType;
    private ProjectDto project;
    private ProjectTaskDto projectTask;
    private Double receiptQty;
    private SubAccountDescriptionDto sub;
    private TaxCategoryNumberDescriptionDto taxCategory;
    private Integer transferOrderLineNbr;
    private String transferOrderNbr;
    private TransferOrderTypeEnum transferOrderType;
    private Double unitCost;
    private String uom;
    private WarehouseIdDescriptionDto warehouse;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("account")
    public AccountNumberTypeDescriptionDto getAccount ( ) { 
        return this.account;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("account")
    public void setAccount (AccountNumberTypeDescriptionDto value) { 
        this.account = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("actualAccount")
    public AccountNumberTypeDescriptionDto getActualAccount ( ) { 
        return this.actualAccount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("actualAccount")
    public void setActualAccount (AccountNumberTypeDescriptionDto value) { 
        this.actualAccount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("actualSub")
    public SubAccountDescriptionDto getActualSub ( ) { 
        return this.actualSub;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("actualSub")
    public void setActualSub (SubAccountDescriptionDto value) { 
        this.actualSub = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("allocations")
    public List<AllocationsDto> getAllocations ( ) { 
        return this.allocations;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("allocations")
    public void setAllocations (List<AllocationsDto> value) { 
        this.allocations = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("amount")
    public Double getAmount ( ) { 
        return this.amount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("amount")
    public void setAmount (Double value) { 
        this.amount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("branch")
    public BranchNumberDto getBranch ( ) { 
        return this.branch;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("branch")
    public void setBranch (BranchNumberDto value) { 
        this.branch = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("completePoLine")
    public Boolean getCompletePoLine ( ) { 
        return this.completePoLine;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("completePoLine")
    public void setCompletePoLine (Boolean value) { 
        this.completePoLine = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("description")
    public void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountAmount")
    public Double getDiscountAmount ( ) { 
        return this.discountAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountAmount")
    public void setDiscountAmount (Double value) { 
        this.discountAmount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountCode")
    public DiscountCodeNumberDescriptionDto getDiscountCode ( ) { 
        return this.discountCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountCode")
    public void setDiscountCode (DiscountCodeNumberDescriptionDto value) { 
        this.discountCode = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("discountPercent")
    public Double getDiscountPercent ( ) { 
        return this.discountPercent;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("discountPercent")
    public void setDiscountPercent (Double value) { 
        this.discountPercent = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("expirationDate")
    public Date getExpirationDate ( ) { 
        return this.expirationDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("expirationDate")
    public void setExpirationDate (Date value) { 
        this.expirationDate = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("extCost")
    public Double getExtCost ( ) { 
        return this.extCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("extCost")
    public void setExtCost (Double value) { 
        this.extCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("inventory")
    public InventoryNumberDescriptionDto getInventory ( ) { 
        return this.inventory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("inventory")
    public void setInventory (InventoryNumberDescriptionDto value) { 
        this.inventory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineDescription")
    public String getLineDescription ( ) { 
        return this.lineDescription;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineDescription")
    public void setLineDescription (String value) { 
        this.lineDescription = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineNbr")
    public Integer getLineNbr ( ) { 
        return this.lineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineNbr")
    public void setLineNbr (Integer value) { 
        this.lineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lineType")
    public LineTypeEnum getLineType ( ) { 
        return this.lineType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lineType")
    public void setLineType (LineTypeEnum value) { 
        this.lineType = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationIdNameDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationIdNameDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lotSerialNumber")
    public String getLotSerialNumber ( ) { 
        return this.lotSerialNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lotSerialNumber")
    public void setLotSerialNumber (String value) { 
        this.lotSerialNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("manualDiscount")
    public Boolean getManualDiscount ( ) { 
        return this.manualDiscount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("manualDiscount")
    public void setManualDiscount (Boolean value) { 
        this.manualDiscount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("openQty")
    public Double getOpenQty ( ) { 
        return this.openQty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("openQty")
    public void setOpenQty (Double value) { 
        this.openQty = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("orderQty")
    public Double getOrderQty ( ) { 
        return this.orderQty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("orderQty")
    public void setOrderQty (Double value) { 
        this.orderQty = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("poOrderLineNbr")
    public Integer getPoOrderLineNbr ( ) { 
        return this.poOrderLineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("poOrderLineNbr")
    public void setPoOrderLineNbr (Integer value) { 
        this.poOrderLineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("poOrderNbr")
    public String getPoOrderNbr ( ) { 
        return this.poOrderNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("poOrderNbr")
    public void setPoOrderNbr (String value) { 
        this.poOrderNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("poOrderType")
    public PoOrderTypeEnum getPoOrderType ( ) { 
        return this.poOrderType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("poOrderType")
    public void setPoOrderType (PoOrderTypeEnum value) { 
        this.poOrderType = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("project")
    public ProjectDto getProject ( ) { 
        return this.project;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("project")
    public void setProject (ProjectDto value) { 
        this.project = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("projectTask")
    public ProjectTaskDto getProjectTask ( ) { 
        return this.projectTask;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("projectTask")
    public void setProjectTask (ProjectTaskDto value) { 
        this.projectTask = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("receiptQty")
    public Double getReceiptQty ( ) { 
        return this.receiptQty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("receiptQty")
    public void setReceiptQty (Double value) { 
        this.receiptQty = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("sub")
    public SubAccountDescriptionDto getSub ( ) { 
        return this.sub;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("sub")
    public void setSub (SubAccountDescriptionDto value) { 
        this.sub = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("taxCategory")
    public TaxCategoryNumberDescriptionDto getTaxCategory ( ) { 
        return this.taxCategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("taxCategory")
    public void setTaxCategory (TaxCategoryNumberDescriptionDto value) { 
        this.taxCategory = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("transferOrderLineNbr")
    public Integer getTransferOrderLineNbr ( ) { 
        return this.transferOrderLineNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("transferOrderLineNbr")
    public void setTransferOrderLineNbr (Integer value) { 
        this.transferOrderLineNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("transferOrderNbr")
    public String getTransferOrderNbr ( ) { 
        return this.transferOrderNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("transferOrderNbr")
    public void setTransferOrderNbr (String value) { 
        this.transferOrderNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("transferOrderType")
    public TransferOrderTypeEnum getTransferOrderType ( ) { 
        return this.transferOrderType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("transferOrderType")
    public void setTransferOrderType (TransferOrderTypeEnum value) { 
        this.transferOrderType = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("unitCost")
    public Double getUnitCost ( ) { 
        return this.unitCost;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("unitCost")
    public void setUnitCost (Double value) { 
        this.unitCost = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("uom")
    public String getUom ( ) { 
        return this.uom;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("uom")
    public void setUom (String value) { 
        this.uom = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouse")
    public WarehouseIdDescriptionDto getWarehouse ( ) { 
        return this.warehouse;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouse")
    public void setWarehouse (WarehouseIdDescriptionDto value) { 
        this.warehouse = value;
    }
 
}
 