/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class CreditNoteDtoBuilder {
    //the instance to build
    private CreditNoteDto creditNoteDto;

    /**
     * Default constructor to initialize the instance
     */
    public CreditNoteDtoBuilder() {
        creditNoteDto = new CreditNoteDto();
    }

    public CreditNoteDtoBuilder amount(Double amount) {
        creditNoteDto.setAmount(amount);
        return this;
    }

    public CreditNoteDtoBuilder amountInCurrency(Double amountInCurrency) {
        creditNoteDto.setAmountInCurrency(amountInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder attachments(List<AttachmentDto> attachments) {
        creditNoteDto.setAttachments(attachments);
        return this;
    }

    public CreditNoteDtoBuilder balance(Double balance) {
        creditNoteDto.setBalance(balance);
        return this;
    }

    public CreditNoteDtoBuilder balanceInCurrency(Double balanceInCurrency) {
        creditNoteDto.setBalanceInCurrency(balanceInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder cashDiscount(Double cashDiscount) {
        creditNoteDto.setCashDiscount(cashDiscount);
        return this;
    }

    public CreditNoteDtoBuilder cashDiscountInCurrency(Double cashDiscountInCurrency) {
        creditNoteDto.setCashDiscountInCurrency(cashDiscountInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder createdDateTime(Date createdDateTime) {
        creditNoteDto.setCreatedDateTime(createdDateTime);
        return this;
    }

    public CreditNoteDtoBuilder currencyId(String currencyId) {
        creditNoteDto.setCurrencyId(currencyId);
        return this;
    }

    public CreditNoteDtoBuilder customer(CustomerNumberDto customer) {
        creditNoteDto.setCustomer(customer);
        return this;
    }

    public CreditNoteDtoBuilder customerRefNumber(String customerRefNumber) {
        creditNoteDto.setCustomerRefNumber(customerRefNumber);
        return this;
    }

    public CreditNoteDtoBuilder detailTotal(Double detailTotal) {
        creditNoteDto.setDetailTotal(detailTotal);
        return this;
    }

    public CreditNoteDtoBuilder detailTotalInCurrency(Double detailTotalInCurrency) {
        creditNoteDto.setDetailTotalInCurrency(detailTotalInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder documentDate(Date documentDate) {
        creditNoteDto.setDocumentDate(documentDate);
        return this;
    }

    public CreditNoteDtoBuilder documentType(DocumentTypeEnum documentType) {
        creditNoteDto.setDocumentType(documentType);
        return this;
    }

    public CreditNoteDtoBuilder externalReference(String externalReference) {
        creditNoteDto.setExternalReference(externalReference);
        return this;
    }

    public CreditNoteDtoBuilder financialPeriod(String financialPeriod) {
        creditNoteDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public CreditNoteDtoBuilder hold(Boolean hold) {
        creditNoteDto.setHold(hold);
        return this;
    }

    public CreditNoteDtoBuilder invoiceLines(List<CreditNoteLineDto> invoiceLines) {
        creditNoteDto.setInvoiceLines(invoiceLines);
        return this;
    }

    public CreditNoteDtoBuilder invoiceText(String invoiceText) {
        creditNoteDto.setInvoiceText(invoiceText);
        return this;
    }

    public CreditNoteDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        creditNoteDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public CreditNoteDtoBuilder location(LocationDto location) {
        creditNoteDto.setLocation(location);
        return this;
    }

    public CreditNoteDtoBuilder note(String note) {
        creditNoteDto.setNote(note);
        return this;
    }

    public CreditNoteDtoBuilder paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
        creditNoteDto.setPaymentMethod(paymentMethod);
        return this;
    }

    public CreditNoteDtoBuilder postPeriod(String postPeriod) {
        creditNoteDto.setPostPeriod(postPeriod);
        return this;
    }

    public CreditNoteDtoBuilder referenceNumber(String referenceNumber) {
        creditNoteDto.setReferenceNumber(referenceNumber);
        return this;
    }

    public CreditNoteDtoBuilder salesPersonDescr(String salesPersonDescr) {
        creditNoteDto.setSalesPersonDescr(salesPersonDescr);
        return this;
    }

    public CreditNoteDtoBuilder salesPersonID(Integer salesPersonID) {
        creditNoteDto.setSalesPersonID(salesPersonID);
        return this;
    }

    public CreditNoteDtoBuilder status(StatusEnum status) {
        creditNoteDto.setStatus(status);
        return this;
    }

    public CreditNoteDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        creditNoteDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public CreditNoteDtoBuilder vatExemptTotalInCurrency(Double vatExemptTotalInCurrency) {
        creditNoteDto.setVatExemptTotalInCurrency(vatExemptTotalInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        creditNoteDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }

    public CreditNoteDtoBuilder vatTaxableTotalInCurrency(Double vatTaxableTotalInCurrency) {
        creditNoteDto.setVatTaxableTotalInCurrency(vatTaxableTotalInCurrency);
        return this;
    }

    public CreditNoteDtoBuilder vatTotal(Double vatTotal) {
        creditNoteDto.setVatTotal(vatTotal);
        return this;
    }

    public CreditNoteDtoBuilder vatTotalInCurrency(Double vatTotalInCurrency) {
        creditNoteDto.setVatTotalInCurrency(vatTotalInCurrency);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreditNoteDto build() {
        return creditNoteDto;
    }
}