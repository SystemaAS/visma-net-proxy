/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum Value220Enum {
    INVOICE, //TODO: Write general description for this element
    DEBITNOTE, //TODO: Write general description for this element
    CREDITNOTE, //TODO: Write general description for this element
    PAYMENT, //TODO: Write general description for this element
    VOIDPAYMENT, //TODO: Write general description for this element
    PREPAYMENT, //TODO: Write general description for this element
    REFUND, //TODO: Write general description for this element
    FINCHARGE, //TODO: Write general description for this element
    SMALLBALANCEWO, //TODO: Write general description for this element
    SMALLCREDITWO, //TODO: Write general description for this element
    CASHSALE, //TODO: Write general description for this element
    CASHRETURN, //TODO: Write general description for this element
    UNDEFINED, //TODO: Write general description for this element
    NOUPDATE; //TODO: Write general description for this element

    private static TreeMap<String, Value220Enum> valueMap = new TreeMap<String, Value220Enum>();
    private String value;

    static {
        INVOICE.value = "Invoice";
        DEBITNOTE.value = "DebitNote";
        CREDITNOTE.value = "CreditNote";
        PAYMENT.value = "Payment";
        VOIDPAYMENT.value = "VoidPayment";
        PREPAYMENT.value = "Prepayment";
        REFUND.value = "Refund";
        FINCHARGE.value = "FinCharge";
        SMALLBALANCEWO.value = "SmallBalanceWo";
        SMALLCREDITWO.value = "SmallCreditWo";
        CASHSALE.value = "CashSale";
        CASHRETURN.value = "CashReturn";
        UNDEFINED.value = "Undefined";
        NOUPDATE.value = "NoUpdate";

        valueMap.put("Invoice", INVOICE);
        valueMap.put("DebitNote", DEBITNOTE);
        valueMap.put("CreditNote", CREDITNOTE);
        valueMap.put("Payment", PAYMENT);
        valueMap.put("VoidPayment", VOIDPAYMENT);
        valueMap.put("Prepayment", PREPAYMENT);
        valueMap.put("Refund", REFUND);
        valueMap.put("FinCharge", FINCHARGE);
        valueMap.put("SmallBalanceWo", SMALLBALANCEWO);
        valueMap.put("SmallCreditWo", SMALLCREDITWO);
        valueMap.put("CashSale", CASHSALE);
        valueMap.put("CashReturn", CASHRETURN);
        valueMap.put("Undefined", UNDEFINED);
        valueMap.put("NoUpdate", NOUPDATE);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static Value220Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Value220Enum values to list of string values
     * @param toConvert The list of Value220Enum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<Value220Enum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (Value220Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 