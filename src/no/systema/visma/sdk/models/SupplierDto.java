/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class SupplierDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5510012175115735233L;
    private String accountReference;
    private AccountUsedForPaymentEnum accountUsedForPayment;
    private String cashAccount;
    private ChargeBearerEnum chargeBearer;
    private String corporateId;
    private CreditTermsDto creditTerms;
    private String currencyId;
    private String documentLanguage;
    private Integer internalId;
    private Date lastModifiedDateTime;
    private LocationDto location;
    private AddressDto mainAddress;
    private ContactInfoDto mainContact;
    private String name;
    private String number;
    private ParentRecordDto parentRecord;
    private PaymentByEnum paymentBy;
    private Integer paymentLeadTime;
    private PaymentMethodIdDescriptionDto paymentMethod;
    private String paymentRefDisplayMask;
    private Boolean paySeparately;
    private AddressDto remitAddress;
    private ContactInfoDto remitContact;
    private Status130Enum status;
    private AddressDto supplierAddress;
    private ClassDescriptionDto supplierClass;
    private ContactInfoDto supplierContact;
    private String vatRegistrationId;
    private VatZoneDto vatZone;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("accountReference")
    public String getAccountReference ( ) { 
        return this.accountReference;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("accountReference")
    public void setAccountReference (String value) { 
        this.accountReference = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("accountUsedForPayment")
    public AccountUsedForPaymentEnum getAccountUsedForPayment ( ) { 
        return this.accountUsedForPayment;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("accountUsedForPayment")
    public void setAccountUsedForPayment (AccountUsedForPaymentEnum value) { 
        this.accountUsedForPayment = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("cashAccount")
    public String getCashAccount ( ) { 
        return this.cashAccount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("cashAccount")
    public void setCashAccount (String value) { 
        this.cashAccount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("chargeBearer")
    public ChargeBearerEnum getChargeBearer ( ) { 
        return this.chargeBearer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("chargeBearer")
    public void setChargeBearer (ChargeBearerEnum value) { 
        this.chargeBearer = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("corporateId")
    public String getCorporateId ( ) { 
        return this.corporateId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("corporateId")
    public void setCorporateId (String value) { 
        this.corporateId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("creditTerms")
    public CreditTermsDto getCreditTerms ( ) { 
        return this.creditTerms;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("creditTerms")
    public void setCreditTerms (CreditTermsDto value) { 
        this.creditTerms = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("currencyId")
    public String getCurrencyId ( ) { 
        return this.currencyId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("currencyId")
    public void setCurrencyId (String value) { 
        this.currencyId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("documentLanguage")
    public String getDocumentLanguage ( ) { 
        return this.documentLanguage;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("documentLanguage")
    public void setDocumentLanguage (String value) { 
        this.documentLanguage = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("internalId")
    public Integer getInternalId ( ) { 
        return this.internalId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("internalId")
    public void setInternalId (Integer value) { 
        this.internalId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTime")
    public Date getLastModifiedDateTime ( ) { 
        return this.lastModifiedDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTime")
    public void setLastModifiedDateTime (Date value) { 
        this.lastModifiedDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("mainAddress")
    public AddressDto getMainAddress ( ) { 
        return this.mainAddress;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("mainAddress")
    public void setMainAddress (AddressDto value) { 
        this.mainAddress = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("mainContact")
    public ContactInfoDto getMainContact ( ) { 
        return this.mainContact;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("mainContact")
    public void setMainContact (ContactInfoDto value) { 
        this.mainContact = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("name")
    public String getName ( ) { 
        return this.name;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("name")
    public void setName (String value) { 
        this.name = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("number")
    public String getNumber ( ) { 
        return this.number;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("number")
    public void setNumber (String value) { 
        this.number = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("parentRecord")
    public ParentRecordDto getParentRecord ( ) { 
        return this.parentRecord;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("parentRecord")
    public void setParentRecord (ParentRecordDto value) { 
        this.parentRecord = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentBy")
    public PaymentByEnum getPaymentBy ( ) { 
        return this.paymentBy;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentBy")
    public void setPaymentBy (PaymentByEnum value) { 
        this.paymentBy = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentLeadTime")
    public Integer getPaymentLeadTime ( ) { 
        return this.paymentLeadTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentLeadTime")
    public void setPaymentLeadTime (Integer value) { 
        this.paymentLeadTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentMethod")
    public PaymentMethodIdDescriptionDto getPaymentMethod ( ) { 
        return this.paymentMethod;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentMethod")
    public void setPaymentMethod (PaymentMethodIdDescriptionDto value) { 
        this.paymentMethod = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentRefDisplayMask")
    public String getPaymentRefDisplayMask ( ) { 
        return this.paymentRefDisplayMask;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentRefDisplayMask")
    public void setPaymentRefDisplayMask (String value) { 
        this.paymentRefDisplayMask = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paySeparately")
    public Boolean getPaySeparately ( ) { 
        return this.paySeparately;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paySeparately")
    public void setPaySeparately (Boolean value) { 
        this.paySeparately = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("remitAddress")
    public AddressDto getRemitAddress ( ) { 
        return this.remitAddress;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("remitAddress")
    public void setRemitAddress (AddressDto value) { 
        this.remitAddress = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("remitContact")
    public ContactInfoDto getRemitContact ( ) { 
        return this.remitContact;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("remitContact")
    public void setRemitContact (ContactInfoDto value) { 
        this.remitContact = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("status")
    public Status130Enum getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("status")
    public void setStatus (Status130Enum value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("supplierAddress")
    public AddressDto getSupplierAddress ( ) { 
        return this.supplierAddress;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("supplierAddress")
    public void setSupplierAddress (AddressDto value) { 
        this.supplierAddress = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("supplierClass")
    public ClassDescriptionDto getSupplierClass ( ) { 
        return this.supplierClass;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("supplierClass")
    public void setSupplierClass (ClassDescriptionDto value) { 
        this.supplierClass = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("supplierContact")
    public ContactInfoDto getSupplierContact ( ) { 
        return this.supplierContact;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("supplierContact")
    public void setSupplierContact (ContactInfoDto value) { 
        this.supplierContact = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("vatRegistrationId")
    public String getVatRegistrationId ( ) { 
        return this.vatRegistrationId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("vatRegistrationId")
    public void setVatRegistrationId (String value) { 
        this.vatRegistrationId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("vatZone")
    public VatZoneDto getVatZone ( ) { 
        return this.vatZone;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("vatZone")
    public void setVatZone (VatZoneDto value) { 
        this.vatZone = value;
    }
 
}
 