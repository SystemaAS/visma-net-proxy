/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class SalesOrderLineUpdateDtoBuilder {
    //the instance to build
    private SalesOrderLineUpdateDto salesOrderLineUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public SalesOrderLineUpdateDtoBuilder() {
        salesOrderLineUpdateDto = new SalesOrderLineUpdateDto();
    }

    public SalesOrderLineUpdateDtoBuilder alternateID(DtoValueString alternateID) {
        salesOrderLineUpdateDto.setAlternateID(alternateID);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder branch(DtoValueNullableInt32 branch) {
        salesOrderLineUpdateDto.setBranch(branch);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder commissionable(DtoValueNullableBoolean commissionable) {
        salesOrderLineUpdateDto.setCommissionable(commissionable);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder completed(DtoValueNullableBoolean completed) {
        salesOrderLineUpdateDto.setCompleted(completed);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder discountCode(DtoValueString discountCode) {
        salesOrderLineUpdateDto.setDiscountCode(discountCode);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder discUnitPrice(DtoValueNullableDecimal discUnitPrice) {
        salesOrderLineUpdateDto.setDiscUnitPrice(discUnitPrice);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder expirationDate(DtoValueNullableDateTime expirationDate) {
        salesOrderLineUpdateDto.setExpirationDate(expirationDate);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder freeItem(DtoValueNullableBoolean freeItem) {
        salesOrderLineUpdateDto.setFreeItem(freeItem);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder inventoryId(DtoValueString inventoryId) {
        salesOrderLineUpdateDto.setInventoryId(inventoryId);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder invoiceNbr(DtoValueString invoiceNbr) {
        salesOrderLineUpdateDto.setInvoiceNbr(invoiceNbr);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder lineDescription(DtoValueString lineDescription) {
        salesOrderLineUpdateDto.setLineDescription(lineDescription);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder lineNbr(DtoValueNullableInt32 lineNbr) {
        salesOrderLineUpdateDto.setLineNbr(lineNbr);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder lotSerialNbr(DtoValueString lotSerialNbr) {
        salesOrderLineUpdateDto.setLotSerialNbr(lotSerialNbr);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder manualDiscount(DtoValueNullableBoolean manualDiscount) {
        salesOrderLineUpdateDto.setManualDiscount(manualDiscount);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder markForPO(DtoValueNullableBoolean markForPO) {
        salesOrderLineUpdateDto.setMarkForPO(markForPO);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder operation(OperationEnum operation) {
        salesOrderLineUpdateDto.setOperation(operation);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder overshipThreshold(DtoValueNullableDecimal overshipThreshold) {
        salesOrderLineUpdateDto.setOvershipThreshold(overshipThreshold);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder poSource(DtoValueNullableInventoryReplenishmentSources poSource) {
        salesOrderLineUpdateDto.setPoSource(poSource);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder projectTask(DtoValueString projectTask) {
        salesOrderLineUpdateDto.setProjectTask(projectTask);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder quantity(DtoValueNullableDecimal quantity) {
        salesOrderLineUpdateDto.setQuantity(quantity);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder reasonCode(DtoValueString reasonCode) {
        salesOrderLineUpdateDto.setReasonCode(reasonCode);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder requestedOn(DtoValueNullableDateTime requestedOn) {
        salesOrderLineUpdateDto.setRequestedOn(requestedOn);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder salesOrderOperation(DtoValueNullableSalesOrderOperations salesOrderOperation) {
        salesOrderLineUpdateDto.setSalesOrderOperation(salesOrderOperation);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder salesPerson(DtoValueString salesPerson) {
        salesOrderLineUpdateDto.setSalesPerson(salesPerson);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder shipComplete(DtoValueNullableSalesOrderShipCompleteStatuses shipComplete) {
        salesOrderLineUpdateDto.setShipComplete(shipComplete);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder shipOn(DtoValueNullableDateTime shipOn) {
        salesOrderLineUpdateDto.setShipOn(shipOn);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder taxCategory(DtoValueString taxCategory) {
        salesOrderLineUpdateDto.setTaxCategory(taxCategory);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder undershipThreshold(DtoValueNullableDecimal undershipThreshold) {
        salesOrderLineUpdateDto.setUndershipThreshold(undershipThreshold);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder unitPrice(DtoValueNullableDecimal unitPrice) {
        salesOrderLineUpdateDto.setUnitPrice(unitPrice);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder uom(DtoValueString uom) {
        salesOrderLineUpdateDto.setUom(uom);
        return this;
    }

    public SalesOrderLineUpdateDtoBuilder warehouse(DtoValueString warehouse) {
        salesOrderLineUpdateDto.setWarehouse(warehouse);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public SalesOrderLineUpdateDto build() {
        return salesOrderLineUpdateDto;
    }
}