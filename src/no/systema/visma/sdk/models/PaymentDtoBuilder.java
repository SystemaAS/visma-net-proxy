/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PaymentDtoBuilder {
    //the instance to build
    private PaymentDto paymentDto;

    /**
     * Default constructor to initialize the instance
     */
    public PaymentDtoBuilder() {
        paymentDto = new PaymentDto();
    }

    public PaymentDtoBuilder applicationDate(Date applicationDate) {
        paymentDto.setApplicationDate(applicationDate);
        return this;
    }

    public PaymentDtoBuilder applicationPeriod(String applicationPeriod) {
        paymentDto.setApplicationPeriod(applicationPeriod);
        return this;
    }

    public PaymentDtoBuilder appliedToDocuments(Double appliedToDocuments) {
        paymentDto.setAppliedToDocuments(appliedToDocuments);
        return this;
    }

    public PaymentDtoBuilder appliedToOrders(Double appliedToOrders) {
        paymentDto.setAppliedToOrders(appliedToOrders);
        return this;
    }

    public PaymentDtoBuilder availableBalance(Double availableBalance) {
        paymentDto.setAvailableBalance(availableBalance);
        return this;
    }

    public PaymentDtoBuilder cashAccount(String cashAccount) {
        paymentDto.setCashAccount(cashAccount);
        return this;
    }

    public PaymentDtoBuilder currency(String currency) {
        paymentDto.setCurrency(currency);
        return this;
    }

    public PaymentDtoBuilder customer(CustomerNumberDto customer) {
        paymentDto.setCustomer(customer);
        return this;
    }

    public PaymentDtoBuilder deductedCharges(Double deductedCharges) {
        paymentDto.setDeductedCharges(deductedCharges);
        return this;
    }

    public PaymentDtoBuilder financeCharges(Double financeCharges) {
        paymentDto.setFinanceCharges(financeCharges);
        return this;
    }

    public PaymentDtoBuilder hold(Boolean hold) {
        paymentDto.setHold(hold);
        return this;
    }

    public PaymentDtoBuilder invoiceText(String invoiceText) {
        paymentDto.setInvoiceText(invoiceText);
        return this;
    }

    public PaymentDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        paymentDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public PaymentDtoBuilder location(LocationDto location) {
        paymentDto.setLocation(location);
        return this;
    }

    public PaymentDtoBuilder paymentAmount(Double paymentAmount) {
        paymentDto.setPaymentAmount(paymentAmount);
        return this;
    }

    public PaymentDtoBuilder paymentLines(List<PaymentLineDto> paymentLines) {
        paymentDto.setPaymentLines(paymentLines);
        return this;
    }

    public PaymentDtoBuilder paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
        paymentDto.setPaymentMethod(paymentMethod);
        return this;
    }

    public PaymentDtoBuilder paymentRef(String paymentRef) {
        paymentDto.setPaymentRef(paymentRef);
        return this;
    }

    public PaymentDtoBuilder refNbr(String refNbr) {
        paymentDto.setRefNbr(refNbr);
        return this;
    }

    public PaymentDtoBuilder status(StatusEnum status) {
        paymentDto.setStatus(status);
        return this;
    }

    public PaymentDtoBuilder type(Type210Enum type) {
        paymentDto.setType(type);
        return this;
    }

    public PaymentDtoBuilder writeOffAmount(Double writeOffAmount) {
        paymentDto.setWriteOffAmount(writeOffAmount);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PaymentDto build() {
        return paymentDto;
    }
}