/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class SalesOrderBasicDtoBuilder {
    //the instance to build
    private SalesOrderBasicDto salesOrderBasicDto;

    /**
     * Default constructor to initialize the instance
     */
    public SalesOrderBasicDtoBuilder() {
        salesOrderBasicDto = new SalesOrderBasicDto();
    }

    public SalesOrderBasicDtoBuilder currency(String currency) {
        salesOrderBasicDto.setCurrency(currency);
        return this;
    }

    public SalesOrderBasicDtoBuilder customer(CustomerDescriptionDto customer) {
        salesOrderBasicDto.setCustomer(customer);
        return this;
    }

    public SalesOrderBasicDtoBuilder customerOrder(String customerOrder) {
        salesOrderBasicDto.setCustomerOrder(customerOrder);
        return this;
    }

    public SalesOrderBasicDtoBuilder customerRefNo(String customerRefNo) {
        salesOrderBasicDto.setCustomerRefNo(customerRefNo);
        return this;
    }

    public SalesOrderBasicDtoBuilder date(Date date) {
        salesOrderBasicDto.setDate(date);
        return this;
    }

    public SalesOrderBasicDtoBuilder description(String description) {
        salesOrderBasicDto.setDescription(description);
        return this;
    }

    public SalesOrderBasicDtoBuilder hold(Boolean hold) {
        salesOrderBasicDto.setHold(hold);
        return this;
    }

    public SalesOrderBasicDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        salesOrderBasicDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public SalesOrderBasicDtoBuilder lines(List<SalesOrderDocumentLineDto> lines) {
        salesOrderBasicDto.setLines(lines);
        return this;
    }

    public SalesOrderBasicDtoBuilder location(LocationDto location) {
        salesOrderBasicDto.setLocation(location);
        return this;
    }

    public SalesOrderBasicDtoBuilder orderNo(String orderNo) {
        salesOrderBasicDto.setOrderNo(orderNo);
        return this;
    }

    public SalesOrderBasicDtoBuilder orderTotal(Double orderTotal) {
        salesOrderBasicDto.setOrderTotal(orderTotal);
        return this;
    }

    public SalesOrderBasicDtoBuilder orderType(String orderType) {
        salesOrderBasicDto.setOrderType(orderType);
        return this;
    }

    public SalesOrderBasicDtoBuilder requestOn(Date requestOn) {
        salesOrderBasicDto.setRequestOn(requestOn);
        return this;
    }

    public SalesOrderBasicDtoBuilder status(Status85Enum status) {
        salesOrderBasicDto.setStatus(status);
        return this;
    }

    public SalesOrderBasicDtoBuilder taxTotal(Double taxTotal) {
        salesOrderBasicDto.setTaxTotal(taxTotal);
        return this;
    }

    public SalesOrderBasicDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        salesOrderBasicDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public SalesOrderBasicDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        salesOrderBasicDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public SalesOrderBasicDto build() {
        return salesOrderBasicDto;
    }
}