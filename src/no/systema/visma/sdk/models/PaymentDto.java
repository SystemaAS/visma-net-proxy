/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class PaymentDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5450518985662518832L;
    private Date applicationDate;
    private String applicationPeriod;
    private Double appliedToDocuments;
    private Double appliedToOrders;
    private Double availableBalance;
    private String cashAccount;
    private String currency;
    private CustomerNumberDto customer;
    private Double deductedCharges;
    private Double financeCharges;
    private Boolean hold;
    private String invoiceText;
    private Date lastModifiedDateTime;
    private LocationDto location;
    private Double paymentAmount;
    private List<PaymentLineDto> paymentLines;
    private PaymentMethodIdDescriptionDto paymentMethod;
    private String paymentRef;
    private String refNbr;
    private StatusEnum status;
    private Type210Enum type;
    private Double writeOffAmount;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("applicationDate")
    public Date getApplicationDate ( ) { 
        return this.applicationDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("applicationDate")
    public void setApplicationDate (Date value) { 
        this.applicationDate = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("applicationPeriod")
    public String getApplicationPeriod ( ) { 
        return this.applicationPeriod;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("applicationPeriod")
    public void setApplicationPeriod (String value) { 
        this.applicationPeriod = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("appliedToDocuments")
    public Double getAppliedToDocuments ( ) { 
        return this.appliedToDocuments;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("appliedToDocuments")
    public void setAppliedToDocuments (Double value) { 
        this.appliedToDocuments = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("appliedToOrders")
    public Double getAppliedToOrders ( ) { 
        return this.appliedToOrders;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("appliedToOrders")
    public void setAppliedToOrders (Double value) { 
        this.appliedToOrders = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("availableBalance")
    public Double getAvailableBalance ( ) { 
        return this.availableBalance;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("availableBalance")
    public void setAvailableBalance (Double value) { 
        this.availableBalance = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("cashAccount")
    public String getCashAccount ( ) { 
        return this.cashAccount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("cashAccount")
    public void setCashAccount (String value) { 
        this.cashAccount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("currency")
    public String getCurrency ( ) { 
        return this.currency;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("currency")
    public void setCurrency (String value) { 
        this.currency = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("customer")
    public CustomerNumberDto getCustomer ( ) { 
        return this.customer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("customer")
    public void setCustomer (CustomerNumberDto value) { 
        this.customer = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("deductedCharges")
    public Double getDeductedCharges ( ) { 
        return this.deductedCharges;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("deductedCharges")
    public void setDeductedCharges (Double value) { 
        this.deductedCharges = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("financeCharges")
    public Double getFinanceCharges ( ) { 
        return this.financeCharges;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("financeCharges")
    public void setFinanceCharges (Double value) { 
        this.financeCharges = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("hold")
    public Boolean getHold ( ) { 
        return this.hold;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("hold")
    public void setHold (Boolean value) { 
        this.hold = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("invoiceText")
    public String getInvoiceText ( ) { 
        return this.invoiceText;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("invoiceText")
    public void setInvoiceText (String value) { 
        this.invoiceText = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastModifiedDateTime")
    public Date getLastModifiedDateTime ( ) { 
        return this.lastModifiedDateTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastModifiedDateTime")
    public void setLastModifiedDateTime (Date value) { 
        this.lastModifiedDateTime = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("location")
    public LocationDto getLocation ( ) { 
        return this.location;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("location")
    public void setLocation (LocationDto value) { 
        this.location = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentAmount")
    public Double getPaymentAmount ( ) { 
        return this.paymentAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentAmount")
    public void setPaymentAmount (Double value) { 
        this.paymentAmount = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentLines")
    public List<PaymentLineDto> getPaymentLines ( ) { 
        return this.paymentLines;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentLines")
    public void setPaymentLines (List<PaymentLineDto> value) { 
        this.paymentLines = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentMethod")
    public PaymentMethodIdDescriptionDto getPaymentMethod ( ) { 
        return this.paymentMethod;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentMethod")
    public void setPaymentMethod (PaymentMethodIdDescriptionDto value) { 
        this.paymentMethod = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("paymentRef")
    public String getPaymentRef ( ) { 
        return this.paymentRef;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("paymentRef")
    public void setPaymentRef (String value) { 
        this.paymentRef = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("refNbr")
    public String getRefNbr ( ) { 
        return this.refNbr;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("refNbr")
    public void setRefNbr (String value) { 
        this.refNbr = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("status")
    public StatusEnum getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("status")
    public void setStatus (StatusEnum value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("type")
    public Type210Enum getType ( ) { 
        return this.type;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("type")
    public void setType (Type210Enum value) { 
        this.type = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("writeOffAmount")
    public Double getWriteOffAmount ( ) { 
        return this.writeOffAmount;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("writeOffAmount")
    public void setWriteOffAmount (Double value) { 
        this.writeOffAmount = value;
    }
 
}
 