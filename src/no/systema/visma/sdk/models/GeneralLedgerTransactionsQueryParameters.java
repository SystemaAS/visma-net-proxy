/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class GeneralLedgerTransactionsQueryParameters 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5232484946870817044L;
    private String account;
    private String branch;
    private String fromDate;
    private String fromPeriod;
    private Boolean includeUnposted;
    private Boolean includeUnreleased;
    private String ledger;
    private Integer numberToRead;
    private Integer skipRecords;
    private String subaccountId;
    private String toDate;
    private String toPeriod;
    /** GETTER
     * Mandatory
     */
    @JsonGetter("account")
    public String getAccount ( ) { 
        return this.account;
    }
    
    /** SETTER
     * Mandatory
     */
    @JsonSetter("account")
    public void setAccount (String value) { 
        this.account = value;
    }
 
    /** GETTER
     * Mandatory
     */
    @JsonGetter("branch")
    public String getBranch ( ) { 
        return this.branch;
    }
    
    /** SETTER
     * Mandatory
     */
    @JsonSetter("branch")
    public void setBranch (String value) { 
        this.branch = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("fromDate")
    public String getFromDate ( ) { 
        return this.fromDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("fromDate")
    public void setFromDate (String value) { 
        this.fromDate = value;
    }
 
    /** GETTER
     * Mandatory
     */
    @JsonGetter("fromPeriod")
    public String getFromPeriod ( ) { 
        return this.fromPeriod;
    }
    
    /** SETTER
     * Mandatory
     */
    @JsonSetter("fromPeriod")
    public void setFromPeriod (String value) { 
        this.fromPeriod = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("includeUnposted")
    public Boolean getIncludeUnposted ( ) { 
        return this.includeUnposted;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("includeUnposted")
    public void setIncludeUnposted (Boolean value) { 
        this.includeUnposted = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("includeUnreleased")
    public Boolean getIncludeUnreleased ( ) { 
        return this.includeUnreleased;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("includeUnreleased")
    public void setIncludeUnreleased (Boolean value) { 
        this.includeUnreleased = value;
    }
 
    /** GETTER
     * Mandatory
     */
    @JsonGetter("ledger")
    public String getLedger ( ) { 
        return this.ledger;
    }
    
    /** SETTER
     * Mandatory
     */
    @JsonSetter("ledger")
    public void setLedger (String value) { 
        this.ledger = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("numberToRead")
    public Integer getNumberToRead ( ) { 
        return this.numberToRead;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("numberToRead")
    public void setNumberToRead (Integer value) { 
        this.numberToRead = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("skipRecords")
    public Integer getSkipRecords ( ) { 
        return this.skipRecords;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("skipRecords")
    public void setSkipRecords (Integer value) { 
        this.skipRecords = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("subaccountId")
    public String getSubaccountId ( ) { 
        return this.subaccountId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("subaccountId")
    public void setSubaccountId (String value) { 
        this.subaccountId = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("toDate")
    public String getToDate ( ) { 
        return this.toDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("toDate")
    public void setToDate (String value) { 
        this.toDate = value;
    }
 
    /** GETTER
     * Mandatory
     */
    @JsonGetter("toPeriod")
    public String getToPeriod ( ) { 
        return this.toPeriod;
    }
    
    /** SETTER
     * Mandatory
     */
    @JsonSetter("toPeriod")
    public void setToPeriod (String value) { 
        this.toPeriod = value;
    }
 
}
 