/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class JournalTransactionDtoBuilder {
    //the instance to build
    private JournalTransactionDto journalTransactionDto;

    /**
     * Default constructor to initialize the instance
     */
    public JournalTransactionDtoBuilder() {
        journalTransactionDto = new JournalTransactionDto();
    }

    public JournalTransactionDtoBuilder autoReversing(Boolean autoReversing) {
        journalTransactionDto.setAutoReversing(autoReversing);
        return this;
    }

    public JournalTransactionDtoBuilder batchNumber(String batchNumber) {
        journalTransactionDto.setBatchNumber(batchNumber);
        return this;
    }

    public JournalTransactionDtoBuilder controlTotal(Double controlTotal) {
        journalTransactionDto.setControlTotal(controlTotal);
        return this;
    }

    public JournalTransactionDtoBuilder controlTotalInCurrency(Double controlTotalInCurrency) {
        journalTransactionDto.setControlTotalInCurrency(controlTotalInCurrency);
        return this;
    }

    public JournalTransactionDtoBuilder createVatTransaction(Boolean createVatTransaction) {
        journalTransactionDto.setCreateVatTransaction(createVatTransaction);
        return this;
    }

    public JournalTransactionDtoBuilder creditTotal(Double creditTotal) {
        journalTransactionDto.setCreditTotal(creditTotal);
        return this;
    }

    public JournalTransactionDtoBuilder creditTotalInCurrency(Double creditTotalInCurrency) {
        journalTransactionDto.setCreditTotalInCurrency(creditTotalInCurrency);
        return this;
    }

    public JournalTransactionDtoBuilder currencyId(String currencyId) {
        journalTransactionDto.setCurrencyId(currencyId);
        return this;
    }

    public JournalTransactionDtoBuilder debitTotal(Double debitTotal) {
        journalTransactionDto.setDebitTotal(debitTotal);
        return this;
    }

    public JournalTransactionDtoBuilder debitTotalInCurrency(Double debitTotalInCurrency) {
        journalTransactionDto.setDebitTotalInCurrency(debitTotalInCurrency);
        return this;
    }

    public JournalTransactionDtoBuilder description(String description) {
        journalTransactionDto.setDescription(description);
        return this;
    }

    public JournalTransactionDtoBuilder financialPeriod(String financialPeriod) {
        journalTransactionDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public JournalTransactionDtoBuilder hold(Boolean hold) {
        journalTransactionDto.setHold(hold);
        return this;
    }

    public JournalTransactionDtoBuilder journalTransactionLines(List<JournalTransactionLineDto> journalTransactionLines) {
        journalTransactionDto.setJournalTransactionLines(journalTransactionLines);
        return this;
    }

    public JournalTransactionDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        journalTransactionDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public JournalTransactionDtoBuilder ledger(String ledger) {
        journalTransactionDto.setLedger(ledger);
        return this;
    }

    public JournalTransactionDtoBuilder ledgerDescription(String ledgerDescription) {
        journalTransactionDto.setLedgerDescription(ledgerDescription);
        return this;
    }

    public JournalTransactionDtoBuilder module(ModuleEnum module) {
        journalTransactionDto.setModule(module);
        return this;
    }

    public JournalTransactionDtoBuilder originalBatchNumber(String originalBatchNumber) {
        journalTransactionDto.setOriginalBatchNumber(originalBatchNumber);
        return this;
    }

    public JournalTransactionDtoBuilder postPeriod(String postPeriod) {
        journalTransactionDto.setPostPeriod(postPeriod);
        return this;
    }

    public JournalTransactionDtoBuilder reversingEntry(Boolean reversingEntry) {
        journalTransactionDto.setReversingEntry(reversingEntry);
        return this;
    }

    public JournalTransactionDtoBuilder skipVatAmountValidation(Boolean skipVatAmountValidation) {
        journalTransactionDto.setSkipVatAmountValidation(skipVatAmountValidation);
        return this;
    }

    public JournalTransactionDtoBuilder status(Status196Enum status) {
        journalTransactionDto.setStatus(status);
        return this;
    }

    public JournalTransactionDtoBuilder transactionCode(String transactionCode) {
        journalTransactionDto.setTransactionCode(transactionCode);
        return this;
    }

    public JournalTransactionDtoBuilder transactionCodeDescription(String transactionCodeDescription) {
        journalTransactionDto.setTransactionCodeDescription(transactionCodeDescription);
        return this;
    }

    public JournalTransactionDtoBuilder transactionDate(Date transactionDate) {
        journalTransactionDto.setTransactionDate(transactionDate);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public JournalTransactionDto build() {
        return journalTransactionDto;
    }
}