/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class CashSaleDtoBuilder {
    //the instance to build
    private CashSaleDto cashSaleDto;

    /**
     * Default constructor to initialize the instance
     */
    public CashSaleDtoBuilder() {
        cashSaleDto = new CashSaleDto();
    }

    public CashSaleDtoBuilder amount(Double amount) {
        cashSaleDto.setAmount(amount);
        return this;
    }

    public CashSaleDtoBuilder amountInCurrency(Double amountInCurrency) {
        cashSaleDto.setAmountInCurrency(amountInCurrency);
        return this;
    }

    public CashSaleDtoBuilder balance(Double balance) {
        cashSaleDto.setBalance(balance);
        return this;
    }

    public CashSaleDtoBuilder balanceInCurrency(Double balanceInCurrency) {
        cashSaleDto.setBalanceInCurrency(balanceInCurrency);
        return this;
    }

    public CashSaleDtoBuilder cashAccount(String cashAccount) {
        cashSaleDto.setCashAccount(cashAccount);
        return this;
    }

    public CashSaleDtoBuilder cashDiscount(Double cashDiscount) {
        cashSaleDto.setCashDiscount(cashDiscount);
        return this;
    }

    public CashSaleDtoBuilder cashDiscountInCurrency(Double cashDiscountInCurrency) {
        cashSaleDto.setCashDiscountInCurrency(cashDiscountInCurrency);
        return this;
    }

    public CashSaleDtoBuilder cashSaleLines(List<CashSaleLineDto> cashSaleLines) {
        cashSaleDto.setCashSaleLines(cashSaleLines);
        return this;
    }

    public CashSaleDtoBuilder createdDateTime(Date createdDateTime) {
        cashSaleDto.setCreatedDateTime(createdDateTime);
        return this;
    }

    public CashSaleDtoBuilder creditTerms(CreditTermsDto creditTerms) {
        cashSaleDto.setCreditTerms(creditTerms);
        return this;
    }

    public CashSaleDtoBuilder currencyId(String currencyId) {
        cashSaleDto.setCurrencyId(currencyId);
        return this;
    }

    public CashSaleDtoBuilder customer(CustomerNumberDto customer) {
        cashSaleDto.setCustomer(customer);
        return this;
    }

    public CashSaleDtoBuilder customerRefNumber(String customerRefNumber) {
        cashSaleDto.setCustomerRefNumber(customerRefNumber);
        return this;
    }

    public CashSaleDtoBuilder detailTotal(Double detailTotal) {
        cashSaleDto.setDetailTotal(detailTotal);
        return this;
    }

    public CashSaleDtoBuilder detailTotalInCurrency(Double detailTotalInCurrency) {
        cashSaleDto.setDetailTotalInCurrency(detailTotalInCurrency);
        return this;
    }

    public CashSaleDtoBuilder documentDate(Date documentDate) {
        cashSaleDto.setDocumentDate(documentDate);
        return this;
    }

    public CashSaleDtoBuilder documentType(DocumentTypeEnum documentType) {
        cashSaleDto.setDocumentType(documentType);
        return this;
    }

    public CashSaleDtoBuilder financialPeriod(String financialPeriod) {
        cashSaleDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public CashSaleDtoBuilder hold(Boolean hold) {
        cashSaleDto.setHold(hold);
        return this;
    }

    public CashSaleDtoBuilder invoiceText(String invoiceText) {
        cashSaleDto.setInvoiceText(invoiceText);
        return this;
    }

    public CashSaleDtoBuilder lastModifiedDateTime(Date lastModifiedDateTime) {
        cashSaleDto.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public CashSaleDtoBuilder location(LocationDto location) {
        cashSaleDto.setLocation(location);
        return this;
    }

    public CashSaleDtoBuilder note(String note) {
        cashSaleDto.setNote(note);
        return this;
    }

    public CashSaleDtoBuilder paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
        cashSaleDto.setPaymentMethod(paymentMethod);
        return this;
    }

    public CashSaleDtoBuilder paymentReference(String paymentReference) {
        cashSaleDto.setPaymentReference(paymentReference);
        return this;
    }

    public CashSaleDtoBuilder postPeriod(String postPeriod) {
        cashSaleDto.setPostPeriod(postPeriod);
        return this;
    }

    public CashSaleDtoBuilder referenceNumber(String referenceNumber) {
        cashSaleDto.setReferenceNumber(referenceNumber);
        return this;
    }

    public CashSaleDtoBuilder salesPersonDescr(String salesPersonDescr) {
        cashSaleDto.setSalesPersonDescr(salesPersonDescr);
        return this;
    }

    public CashSaleDtoBuilder salesPersonID(Integer salesPersonID) {
        cashSaleDto.setSalesPersonID(salesPersonID);
        return this;
    }

    public CashSaleDtoBuilder status(StatusEnum status) {
        cashSaleDto.setStatus(status);
        return this;
    }

    public CashSaleDtoBuilder vatExemptTotal(Double vatExemptTotal) {
        cashSaleDto.setVatExemptTotal(vatExemptTotal);
        return this;
    }

    public CashSaleDtoBuilder vatExemptTotalInCurrency(Double vatExemptTotalInCurrency) {
        cashSaleDto.setVatExemptTotalInCurrency(vatExemptTotalInCurrency);
        return this;
    }

    public CashSaleDtoBuilder vatTaxableTotal(Double vatTaxableTotal) {
        cashSaleDto.setVatTaxableTotal(vatTaxableTotal);
        return this;
    }

    public CashSaleDtoBuilder vatTaxableTotalInCurrency(Double vatTaxableTotalInCurrency) {
        cashSaleDto.setVatTaxableTotalInCurrency(vatTaxableTotalInCurrency);
        return this;
    }

    public CashSaleDtoBuilder vatTotal(Double vatTotal) {
        cashSaleDto.setVatTotal(vatTotal);
        return this;
    }

    public CashSaleDtoBuilder vatTotalInCurrency(Double vatTotalInCurrency) {
        cashSaleDto.setVatTotalInCurrency(vatTotalInCurrency);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CashSaleDto build() {
        return cashSaleDto;
    }
}