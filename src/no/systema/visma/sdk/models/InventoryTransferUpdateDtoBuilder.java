/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class InventoryTransferUpdateDtoBuilder {
    //the instance to build
    private InventoryTransferUpdateDto inventoryTransferUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public InventoryTransferUpdateDtoBuilder() {
        inventoryTransferUpdateDto = new InventoryTransferUpdateDto();
    }

    /**
     * The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
     */
    public InventoryTransferUpdateDtoBuilder controlQuantity(DtoValueNullableDecimal controlQuantity) {
        inventoryTransferUpdateDto.setControlQuantity(controlQuantity);
        return this;
    }

    /**
     * The date when the receipt was created. All transactions included in this document will have this transaction date.
     */
    public InventoryTransferUpdateDtoBuilder date(DtoValueNullableDateTime date) {
        inventoryTransferUpdateDto.setDate(date);
        return this;
    }

    /**
     * A brief description of the inventory issue or its transactions.
     */
    public InventoryTransferUpdateDtoBuilder description(DtoValueString description) {
        inventoryTransferUpdateDto.setDescription(description);
        return this;
    }

    /**
     * The external reference number of the inventory issue document (for example, the vendor’s reference code).
     */
    public InventoryTransferUpdateDtoBuilder externalReference(DtoValueString externalReference) {
        inventoryTransferUpdateDto.setExternalReference(externalReference);
        return this;
    }

    /**
     * A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
     */
    public InventoryTransferUpdateDtoBuilder hold(DtoValueNullableBoolean hold) {
        inventoryTransferUpdateDto.setHold(hold);
        return this;
    }

    /**
     * The financial period to which the transactions recorded in the document should be posted.
     */
    public InventoryTransferUpdateDtoBuilder postPeriod(DtoValueString postPeriod) {
        inventoryTransferUpdateDto.setPostPeriod(postPeriod);
        return this;
    }

    /**
     * The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
     */
    public InventoryTransferUpdateDtoBuilder referenceNumber(DtoValueString referenceNumber) {
        inventoryTransferUpdateDto.setReferenceNumber(referenceNumber);
        return this;
    }

    public InventoryTransferUpdateDtoBuilder toWarehouseId(DtoValueString toWarehouseId) {
        inventoryTransferUpdateDto.setToWarehouseId(toWarehouseId);
        return this;
    }

    /**
     * The inventory issue lines
     */
    public InventoryTransferUpdateDtoBuilder transferLines(List<InventoryTransferLineUpdateDto> transferLines) {
        inventoryTransferUpdateDto.setTransferLines(transferLines);
        return this;
    }

    public InventoryTransferUpdateDtoBuilder warehouseId(DtoValueString warehouseId) {
        inventoryTransferUpdateDto.setWarehouseId(warehouseId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public InventoryTransferUpdateDto build() {
        return inventoryTransferUpdateDto;
    }
}