/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class CashSaleLinesUpdateDtoBuilder {
    //the instance to build
    private CashSaleLinesUpdateDto cashSaleLinesUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public CashSaleLinesUpdateDtoBuilder() {
        cashSaleLinesUpdateDto = new CashSaleLinesUpdateDto();
    }

    public CashSaleLinesUpdateDtoBuilder accountNumber(DtoValueString accountNumber) {
        cashSaleLinesUpdateDto.setAccountNumber(accountNumber);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder deferralCode(DtoValueString deferralCode) {
        cashSaleLinesUpdateDto.setDeferralCode(deferralCode);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder deferralSchedule(DtoValueInt32 deferralSchedule) {
        cashSaleLinesUpdateDto.setDeferralSchedule(deferralSchedule);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder description(DtoValueString description) {
        cashSaleLinesUpdateDto.setDescription(description);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder discountAmountInCurrency(DtoValueDecimal discountAmountInCurrency) {
        cashSaleLinesUpdateDto.setDiscountAmountInCurrency(discountAmountInCurrency);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder discountPercent(DtoValueDecimal discountPercent) {
        cashSaleLinesUpdateDto.setDiscountPercent(discountPercent);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder inventoryNumber(DtoValueString inventoryNumber) {
        cashSaleLinesUpdateDto.setInventoryNumber(inventoryNumber);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder lineNumber(DtoValueInt32 lineNumber) {
        cashSaleLinesUpdateDto.setLineNumber(lineNumber);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder manualAmountInCurrency(DtoValueDecimal manualAmountInCurrency) {
        cashSaleLinesUpdateDto.setManualAmountInCurrency(manualAmountInCurrency);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder manualDiscount(DtoValueBoolean manualDiscount) {
        cashSaleLinesUpdateDto.setManualDiscount(manualDiscount);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder note(DtoValueString note) {
        cashSaleLinesUpdateDto.setNote(note);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder operation(OperationEnum operation) {
        cashSaleLinesUpdateDto.setOperation(operation);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder quantity(DtoValueDecimal quantity) {
        cashSaleLinesUpdateDto.setQuantity(quantity);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder salesperson(DtoValueString salesperson) {
        cashSaleLinesUpdateDto.setSalesperson(salesperson);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder subaccount(List<SegmentUpdateDto> subaccount) {
        cashSaleLinesUpdateDto.setSubaccount(subaccount);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder unitPriceInCurrency(DtoValueDecimal unitPriceInCurrency) {
        cashSaleLinesUpdateDto.setUnitPriceInCurrency(unitPriceInCurrency);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder uom(DtoValueString uom) {
        cashSaleLinesUpdateDto.setUom(uom);
        return this;
    }

    public CashSaleLinesUpdateDtoBuilder vatCodeId(DtoValueString vatCodeId) {
        cashSaleLinesUpdateDto.setVatCodeId(vatCodeId);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CashSaleLinesUpdateDto build() {
        return cashSaleLinesUpdateDto;
    }
}