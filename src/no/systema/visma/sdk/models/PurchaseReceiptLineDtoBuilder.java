/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PurchaseReceiptLineDtoBuilder {
    //the instance to build
    private PurchaseReceiptLineDto purchaseReceiptLineDto;

    /**
     * Default constructor to initialize the instance
     */
    public PurchaseReceiptLineDtoBuilder() {
        purchaseReceiptLineDto = new PurchaseReceiptLineDto();
    }

    public PurchaseReceiptLineDtoBuilder account(AccountNumberTypeDescriptionDto account) {
        purchaseReceiptLineDto.setAccount(account);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder actualAccount(AccountNumberTypeDescriptionDto actualAccount) {
        purchaseReceiptLineDto.setActualAccount(actualAccount);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder actualSub(SubAccountDescriptionDto actualSub) {
        purchaseReceiptLineDto.setActualSub(actualSub);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder allocations(List<AllocationsDto> allocations) {
        purchaseReceiptLineDto.setAllocations(allocations);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder amount(Double amount) {
        purchaseReceiptLineDto.setAmount(amount);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder branch(BranchNumberDto branch) {
        purchaseReceiptLineDto.setBranch(branch);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder completePoLine(Boolean completePoLine) {
        purchaseReceiptLineDto.setCompletePoLine(completePoLine);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder description(String description) {
        purchaseReceiptLineDto.setDescription(description);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder discountAmount(Double discountAmount) {
        purchaseReceiptLineDto.setDiscountAmount(discountAmount);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder discountCode(DiscountCodeNumberDescriptionDto discountCode) {
        purchaseReceiptLineDto.setDiscountCode(discountCode);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder discountPercent(Double discountPercent) {
        purchaseReceiptLineDto.setDiscountPercent(discountPercent);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder expirationDate(Date expirationDate) {
        purchaseReceiptLineDto.setExpirationDate(expirationDate);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder extCost(Double extCost) {
        purchaseReceiptLineDto.setExtCost(extCost);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder inventory(InventoryNumberDescriptionDto inventory) {
        purchaseReceiptLineDto.setInventory(inventory);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder lineDescription(String lineDescription) {
        purchaseReceiptLineDto.setLineDescription(lineDescription);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder lineNbr(Integer lineNbr) {
        purchaseReceiptLineDto.setLineNbr(lineNbr);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder lineType(LineTypeEnum lineType) {
        purchaseReceiptLineDto.setLineType(lineType);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder location(LocationIdNameDto location) {
        purchaseReceiptLineDto.setLocation(location);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder lotSerialNumber(String lotSerialNumber) {
        purchaseReceiptLineDto.setLotSerialNumber(lotSerialNumber);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder manualDiscount(Boolean manualDiscount) {
        purchaseReceiptLineDto.setManualDiscount(manualDiscount);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder openQty(Double openQty) {
        purchaseReceiptLineDto.setOpenQty(openQty);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder orderQty(Double orderQty) {
        purchaseReceiptLineDto.setOrderQty(orderQty);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder poOrderLineNbr(Integer poOrderLineNbr) {
        purchaseReceiptLineDto.setPoOrderLineNbr(poOrderLineNbr);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder poOrderNbr(String poOrderNbr) {
        purchaseReceiptLineDto.setPoOrderNbr(poOrderNbr);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder poOrderType(PoOrderTypeEnum poOrderType) {
        purchaseReceiptLineDto.setPoOrderType(poOrderType);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder project(ProjectDto project) {
        purchaseReceiptLineDto.setProject(project);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder projectTask(ProjectTaskDto projectTask) {
        purchaseReceiptLineDto.setProjectTask(projectTask);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder receiptQty(Double receiptQty) {
        purchaseReceiptLineDto.setReceiptQty(receiptQty);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder sub(SubAccountDescriptionDto sub) {
        purchaseReceiptLineDto.setSub(sub);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder taxCategory(TaxCategoryNumberDescriptionDto taxCategory) {
        purchaseReceiptLineDto.setTaxCategory(taxCategory);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder transferOrderLineNbr(Integer transferOrderLineNbr) {
        purchaseReceiptLineDto.setTransferOrderLineNbr(transferOrderLineNbr);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder transferOrderNbr(String transferOrderNbr) {
        purchaseReceiptLineDto.setTransferOrderNbr(transferOrderNbr);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder transferOrderType(TransferOrderTypeEnum transferOrderType) {
        purchaseReceiptLineDto.setTransferOrderType(transferOrderType);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder unitCost(Double unitCost) {
        purchaseReceiptLineDto.setUnitCost(unitCost);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder uom(String uom) {
        purchaseReceiptLineDto.setUom(uom);
        return this;
    }

    public PurchaseReceiptLineDtoBuilder warehouse(WarehouseIdDescriptionDto warehouse) {
        purchaseReceiptLineDto.setWarehouse(warehouse);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PurchaseReceiptLineDto build() {
        return purchaseReceiptLineDto;
    }
}