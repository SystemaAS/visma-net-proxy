/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class InventoryTransferUpdateDto 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4731269036251713875L;
    private DtoValueNullableDecimal controlQuantity;
    private DtoValueNullableDateTime date;
    private DtoValueString description;
    private DtoValueString externalReference;
    private DtoValueNullableBoolean hold;
    private DtoValueString postPeriod;
    private DtoValueString referenceNumber;
    private DtoValueString toWarehouseId;
    private List<InventoryTransferLineUpdateDto> transferLines;
    private DtoValueString warehouseId;
    /** GETTER
     * The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
     */
    @JsonGetter("controlQuantity")
    public DtoValueNullableDecimal getControlQuantity ( ) { 
        return this.controlQuantity;
    }
    
    /** SETTER
     * The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
     */
    @JsonSetter("controlQuantity")
    public void setControlQuantity (DtoValueNullableDecimal value) { 
        this.controlQuantity = value;
    }
 
    /** GETTER
     * The date when the receipt was created. All transactions included in this document will have this transaction date.
     */
    @JsonGetter("date")
    public DtoValueNullableDateTime getDate ( ) { 
        return this.date;
    }
    
    /** SETTER
     * The date when the receipt was created. All transactions included in this document will have this transaction date.
     */
    @JsonSetter("date")
    public void setDate (DtoValueNullableDateTime value) { 
        this.date = value;
    }
 
    /** GETTER
     * A brief description of the inventory issue or its transactions.
     */
    @JsonGetter("description")
    public DtoValueString getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * A brief description of the inventory issue or its transactions.
     */
    @JsonSetter("description")
    public void setDescription (DtoValueString value) { 
        this.description = value;
    }
 
    /** GETTER
     * The external reference number of the inventory issue document (for example, the vendor’s reference code).
     */
    @JsonGetter("externalReference")
    public DtoValueString getExternalReference ( ) { 
        return this.externalReference;
    }
    
    /** SETTER
     * The external reference number of the inventory issue document (for example, the vendor’s reference code).
     */
    @JsonSetter("externalReference")
    public void setExternalReference (DtoValueString value) { 
        this.externalReference = value;
    }
 
    /** GETTER
     * A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
     */
    @JsonGetter("hold")
    public DtoValueNullableBoolean getHold ( ) { 
        return this.hold;
    }
    
    /** SETTER
     * A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
     */
    @JsonSetter("hold")
    public void setHold (DtoValueNullableBoolean value) { 
        this.hold = value;
    }
 
    /** GETTER
     * The financial period to which the transactions recorded in the document should be posted.
     */
    @JsonGetter("postPeriod")
    public DtoValueString getPostPeriod ( ) { 
        return this.postPeriod;
    }
    
    /** SETTER
     * The financial period to which the transactions recorded in the document should be posted.
     */
    @JsonSetter("postPeriod")
    public void setPostPeriod (DtoValueString value) { 
        this.postPeriod = value;
    }
 
    /** GETTER
     * The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
     */
    @JsonGetter("referenceNumber")
    public DtoValueString getReferenceNumber ( ) { 
        return this.referenceNumber;
    }
    
    /** SETTER
     * The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
     */
    @JsonSetter("referenceNumber")
    public void setReferenceNumber (DtoValueString value) { 
        this.referenceNumber = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("toWarehouseId")
    public DtoValueString getToWarehouseId ( ) { 
        return this.toWarehouseId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("toWarehouseId")
    public void setToWarehouseId (DtoValueString value) { 
        this.toWarehouseId = value;
    }
 
    /** GETTER
     * The inventory issue lines
     */
    @JsonGetter("transferLines")
    public List<InventoryTransferLineUpdateDto> getTransferLines ( ) { 
        return this.transferLines;
    }
    
    /** SETTER
     * The inventory issue lines
     */
    @JsonSetter("transferLines")
    public void setTransferLines (List<InventoryTransferLineUpdateDto> value) { 
        this.transferLines = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("warehouseId")
    public DtoValueString getWarehouseId ( ) { 
        return this.warehouseId;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("warehouseId")
    public void setWarehouseId (DtoValueString value) { 
        this.warehouseId = value;
    }
 
}
 