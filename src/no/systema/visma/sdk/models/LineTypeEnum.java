/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum LineTypeEnum {
    DESCRIPTION, //TODO: Write general description for this element
    FREIGHT, //TODO: Write general description for this element
    GOODSFORDROPSHIP, //TODO: Write general description for this element
    GOODSFORINVENTORY, //TODO: Write general description for this element
    GOODSFORREPLENISHMENT, //TODO: Write general description for this element
    GOODSFORSALESORDER, //TODO: Write general description for this element
    NONSTOCK, //TODO: Write general description for this element
    NONSTOCKFORDROPSHIP, //TODO: Write general description for this element
    NONSTOCKFORSALESORDER, //TODO: Write general description for this element
    SERVICE; //TODO: Write general description for this element

    private static TreeMap<String, LineTypeEnum> valueMap = new TreeMap<String, LineTypeEnum>();
    private String value;

    static {
        DESCRIPTION.value = "Description";
        FREIGHT.value = "Freight";
        GOODSFORDROPSHIP.value = "GoodsForDropShip";
        GOODSFORINVENTORY.value = "GoodsForInventory";
        GOODSFORREPLENISHMENT.value = "GoodsForReplenishment";
        GOODSFORSALESORDER.value = "GoodsForSalesOrder";
        NONSTOCK.value = "NonStock";
        NONSTOCKFORDROPSHIP.value = "NonStockForDropShip";
        NONSTOCKFORSALESORDER.value = "NonStockForSalesOrder";
        SERVICE.value = "Service";

        valueMap.put("Description", DESCRIPTION);
        valueMap.put("Freight", FREIGHT);
        valueMap.put("GoodsForDropShip", GOODSFORDROPSHIP);
        valueMap.put("GoodsForInventory", GOODSFORINVENTORY);
        valueMap.put("GoodsForReplenishment", GOODSFORREPLENISHMENT);
        valueMap.put("GoodsForSalesOrder", GOODSFORSALESORDER);
        valueMap.put("NonStock", NONSTOCK);
        valueMap.put("NonStockForDropShip", NONSTOCKFORDROPSHIP);
        valueMap.put("NonStockForSalesOrder", NONSTOCKFORSALESORDER);
        valueMap.put("Service", SERVICE);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static LineTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of LineTypeEnum values to list of string values
     * @param toConvert The list of LineTypeEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<LineTypeEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (LineTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 