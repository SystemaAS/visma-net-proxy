/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class JournalTransactionUpdateDtoBuilder {
    //the instance to build
    private JournalTransactionUpdateDto journalTransactionUpdateDto;

    /**
     * Default constructor to initialize the instance
     */
    public JournalTransactionUpdateDtoBuilder() {
        journalTransactionUpdateDto = new JournalTransactionUpdateDto();
    }

    public JournalTransactionUpdateDtoBuilder autoReversing(DtoValueBoolean autoReversing) {
        journalTransactionUpdateDto.setAutoReversing(autoReversing);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder batchNumber(DtoValueString batchNumber) {
        journalTransactionUpdateDto.setBatchNumber(batchNumber);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder controlTotalInCurrency(DtoValueDecimal controlTotalInCurrency) {
        journalTransactionUpdateDto.setControlTotalInCurrency(controlTotalInCurrency);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder createVatTransaction(DtoValueBoolean createVatTransaction) {
        journalTransactionUpdateDto.setCreateVatTransaction(createVatTransaction);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder currencyId(DtoValueString currencyId) {
        journalTransactionUpdateDto.setCurrencyId(currencyId);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder description(DtoValueString description) {
        journalTransactionUpdateDto.setDescription(description);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder financialPeriod(DtoValueString financialPeriod) {
        journalTransactionUpdateDto.setFinancialPeriod(financialPeriod);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder hold(DtoValueBoolean hold) {
        journalTransactionUpdateDto.setHold(hold);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder journalTransactionLines(List<JournalTransactionLineUpdateDto> journalTransactionLines) {
        journalTransactionUpdateDto.setJournalTransactionLines(journalTransactionLines);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder ledger(DtoValueString ledger) {
        journalTransactionUpdateDto.setLedger(ledger);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder postPeriod(DtoValueString postPeriod) {
        journalTransactionUpdateDto.setPostPeriod(postPeriod);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder skipVatAmountValidation(DtoValueBoolean skipVatAmountValidation) {
        journalTransactionUpdateDto.setSkipVatAmountValidation(skipVatAmountValidation);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder transactionCode(DtoValueString transactionCode) {
        journalTransactionUpdateDto.setTransactionCode(transactionCode);
        return this;
    }

    public JournalTransactionUpdateDtoBuilder transactionDate(DtoValueDateTime transactionDate) {
        journalTransactionUpdateDto.setTransactionDate(transactionDate);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public JournalTransactionUpdateDto build() {
        return journalTransactionUpdateDto;
    }
}