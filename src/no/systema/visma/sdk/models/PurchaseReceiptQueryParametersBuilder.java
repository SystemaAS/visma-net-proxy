/*
 * VismaNetAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package no.systema.visma.sdk.models;

import java.util.*;

public class PurchaseReceiptQueryParametersBuilder {
    //the instance to build
    private PurchaseReceiptQueryParameters purchaseReceiptQueryParameters;

    /**
     * Default constructor to initialize the instance
     */
    public PurchaseReceiptQueryParametersBuilder() {
        purchaseReceiptQueryParameters = new PurchaseReceiptQueryParameters();
    }

    public PurchaseReceiptQueryParametersBuilder greaterThanValue(String greaterThanValue) {
        purchaseReceiptQueryParameters.setGreaterThanValue(greaterThanValue);
        return this;
    }

    public PurchaseReceiptQueryParametersBuilder lastModifiedDateTime(String lastModifiedDateTime) {
        purchaseReceiptQueryParameters.setLastModifiedDateTime(lastModifiedDateTime);
        return this;
    }

    public PurchaseReceiptQueryParametersBuilder lastModifiedDateTimeCondition(String lastModifiedDateTimeCondition) {
        purchaseReceiptQueryParameters.setLastModifiedDateTimeCondition(lastModifiedDateTimeCondition);
        return this;
    }

    public PurchaseReceiptQueryParametersBuilder numberToRead(Integer numberToRead) {
        purchaseReceiptQueryParameters.setNumberToRead(numberToRead);
        return this;
    }

    public PurchaseReceiptQueryParametersBuilder receiptType(ReceiptTypeEnum receiptType) {
        purchaseReceiptQueryParameters.setReceiptType(receiptType);
        return this;
    }

    public PurchaseReceiptQueryParametersBuilder skipRecords(Integer skipRecords) {
        purchaseReceiptQueryParameters.setSkipRecords(skipRecords);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PurchaseReceiptQueryParameters build() {
        return purchaseReceiptQueryParameters;
    }
}